<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui" >

    <ui:composition template="/template.xhtml">
        <ui:define name="title">
            <h:outputText value="#{configMapController.getKey('ListCustomersTitle')}"></h:outputText>
        </ui:define>
        <ui:define name="body">
            <!--<p:log/>-->
            <p:tabView id="tabView" widgetVar="tabViewWidget" > 
                <p:ajax event="tabChange" listener="#{customersController.onTabChange}" update=":menuForm:growl "/>  

                <p:tab id="tab1" title="Customer List">  
                    <h:form id="CustomerslistForm1">
                        <h:panelGroup >
                            <p:commandButton id="showDialogButton"  immediate="true" actionListener="#{customersController.prepareCreateAjax}" value="#{configMapController.getKey('ListCustomersCreateLink')}" onclick="tabViewWidget.select(2)" update=":tabView:formCustomersCreate1:dialogueGrid1" /> 

                        </h:panelGroup>
                        <h:outputText id="selectedUser" value="#{customersController.selected.firstname} #{customersController.selected.lastname}" />
                        <h:outputText escape="false" value="#{configMapController.getKey('ListCustomersEmpty')}" rendered="#{customersController.items.rowCount == 0}"/>
                        <h:panelGroup rendered="#{customersController.items.rowCount > 0}">
                            <p:dataTable id="tableList" editable="true" selectionMode="single"  rowKey="#{item.id}" selection="#{customersController.selected}" value="#{customersController.items}" filteredValue="#{customersController.filteredItems}"  widgetVar="customersControllerTable" var="item"  paginator="true" rows="15"  paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <h:outputText value="Search all fields:" />
                                        <h:inputText id="globalFilter" onkeyup="customersControllerTable.filter()" />
                                    </p:outputPanel>
                                </f:facet>
                                <p:ajax event="rowEdit" listener="#{customersController.onEdit}" update=":menuForm:growl" oncomplete="customersControllerTable.filter()" />  
                                <p:ajax event="rowEditCancel" listener="#{customersController.onCancel}" update=":menuForm:growl"  oncomplete="customersControllerTable.filter()" /> 
                                <p:ajax event="rowSelect" update=":tabView:CustomerslistForm1:selectedUser :tabView:formCustomersCreate1 :tabView:paymentsForm :tabView:NoteslistForm1"  />  


                                <p:column sortBy="#{item.firstname}" filterBy="#{item.firstname}" headerText="#{configMapController.getKey('ListCustomersTitle_firstname')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.firstname}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.firstname}" label="#{configMapController.getKey('ListCustomersTitle_firstname')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <p:column sortBy="#{item.lastname}" filterBy="#{item.lastname}" headerText="#{configMapController.getKey('ListCustomersTitle_lastname')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.lastname}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.lastname}" label="#{configMapController.getKey('ListCustomersTitle_lastname')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <p:column sortBy="#{item.dob}" filterBy="#{item.dob}" headerText="#{configMapController.getKey('ListCustomersTitle_dob')}"   >

                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.dob}">
                                                <f:convertDateTime pattern="dd MMM yyyy" />
                                            </h:outputText>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:calendar value="#{item.dob}">	
                                                <p:ajax event="dateSelect" listener= "#{customersController.handleDateSelect}" update=":menuForm:growl" />
                                            </p:calendar>
                                        </f:facet>
                                    </p:cellEditor> 

                                </p:column>
                                <p:column sortBy="#{item.emailAddress}" filterBy="#{item.emailAddress}" headerText="#{configMapController.getKey('ListCustomersTitle_emailAddress')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.emailAddress}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.emailAddress}" label="#{configMapController.getKey('ListCustomersTitle_emailAddress')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>


                                <p:column sortBy="#{item.active.customerState}" filterBy="#{item.active.customerState}" headerText="#{configMapController.getKey('ListCustomersTitle_active')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.active.customerState}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:selectOneMenu id="active" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerStateConverter" value="#{item.active}" label="#{configMapController.getKey('CreateCustomersTitle_active')}" >
                                                <f:selectItems value="#{customerStateController.itemsAvailableAsObjects}"  var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}"/>                           
                                            </p:selectOneMenu>

                                        </f:facet>
                                    </p:cellEditor> 
                                </p:column>


                                <p:column rendered="#{customersController.isUserInRole('ADMIN')}"  headerText="Edit" style="width:50px">  
                                    <p:rowEditor />  
                                </p:column>  
                                <!-- 
                                                            <p:column>
                                                                   <p:commandButton rendered="#{customersController.isUserInRole('ADMIN')}"   oncomplete="tabViewWidget.select(1)" update=":tabView:tab1 :tabView:tab2 :menuForm:growl"  value="#{configMapController.getKey('ListCustomersEditLink')}">
                                                                       <f:setPropertyActionListener value="#{item}" target="#{customersController.selected}" />
                                                                   </p:commandButton>                        
                               
                                                               </p:column>
                                                              <p:column>
                                                                   <p:commandButton id="paymentButton"  rendered="#{customersController.isUserInRole('ADMIN')}"    oncomplete="tabViewWidget.select(2)" update=":tabView :menuForm:growl"  value="#{configMapController.getKey('ListCustomersEditPaymentLink')}">
                                                                       <f:setPropertyActionListener value="#{item}" target="#{ezidebit.selectedCustomer}"  />
                                                                   </p:commandButton>                       
                               
                                                               </p:column> -->
                                <p:column>
                                    <p:commandButton id="paymentButton"  rendered="#{customersController.isUserInRole('ADMIN')}"    oncomplete="tabViewWidget.select(1)" update=":tabView:CustomerslistForm1 :tabView:formCustomersCreate1 :tabView:paymentsForm :tabView:NoteslistForm1"  value="#{configMapController.getKey('ListCustomersEditPaymentLink')}">
                                        <f:setPropertyActionListener value="#{item}" target="#{customersController.selected}"  />
                                    </p:commandButton>                       

                                </p:column>
                            </p:dataTable>
                        </h:panelGroup>
                    </h:form>
                </p:tab>
                <p:tab id="tab2" title="Edit Customer Details"  >  
                    <h:form id="formCustomersCreate1">    
                        <!-- <p:log />-->
                        <!--  <p:confirmDialog id="confirmDialogCustomersCreate1" message="Add a new customer to the database."  
                                           header="#{configMapController.getKey('CreateCustomersTitle')}" severity="info" widgetVar="customersCreateDialogue"> -->

                        <p:panelGrid id="dialogueGrid1" columns="4">
                          <!--  <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_id')}" for="id" />
                            <p:inputText id="id" value="#{customersController.selected.id}" title="#{configMapController.getKey('CreateCustomersTitle_id')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_id')}"/>
                            --><p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_gender')}" for="gender" />
                            <h:selectOneMenu id="gender" value="#{customersController.selected.gender}" title="#{configMapController.getKey('EditCustomersTitle_gender')}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_gender')}">
                                <f:selectItem itemValue="M" itemLabel="Male" />
                                <f:selectItem itemValue="F" itemLabel="Female" />
                                <!-- <p:ajax update=":formCustomersCreate1" event="change" />-->
                            </h:selectOneMenu>
                            <h:outputLabel value="#{configMapController.getKey('EditCustomersLabel_firstname')}" for="firstname" />

                            <p:inputText id="firstname"  value="#{customersController.selected.firstname}" title="#{configMapController.getKey('EditCustomersTitle_firstname')}" valueChangeListener="#{customersController.firstNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_firstname')}">
                                <p:ajax update=":tabView:formCustomersCreate1:username" event="keyup"/>
                            </p:inputText>
                            <h:outputLabel value="#{configMapController.getKey('EditCustomersLabel_lastname')}" for="lastname" />
                            <p:inputText id="lastname" value="#{customersController.selected.lastname}" title="#{configMapController.getKey('EditCustomersTitle_lastname')}" valueChangeListener="#{customersController.lastNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_lastname')}">
                                <p:ajax update=":tabView:formCustomersCreate1:username" event="keyup" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_dob')}" for="dob" />


                            <p:calendar id="dob" pattern="MM/dd/yyyy" value="#{customersController.selected.dob}" title="#{configMapController.getKey('CreateCustomersTitle_dob')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_dob')}">
                              <!--  <p:ajax event="dateSelect" listener="#{customersController.handleDateSelect}" update=":formCustomersCreate1" />-->
                            </p:calendar>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailAddress')}" for="emailAddress" />
                            <p:inputText id="emailAddress" value="#{customersController.selected.emailAddress}" title="#{configMapController.getKey('EditCustomersTitle_emailAddress')}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_emailAddress')}">
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.EmailValidator" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_username')}" for="username" />
                            <p:inputText id="username" value="#{customersController.selected.username}" title="#{configMapController.getKey('CreateCustomersTitle_username')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_username')}"/>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_streetAddress')}" for="streetAddress" />
                            <p:inputText id="streetAddress" value="#{customersController.selected.streetAddress}" title="#{configMapController.getKey('CreateCustomersTitle_streetAddress')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_suburb')}" for="suburb" />
                            <p:inputText id="suburb" value="#{customersController.selected.suburb}" title="#{configMapController.getKey('CreateCustomersTitle_suburb')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_postcode')}" for="postcode" />
                            <p:inputText id="postcode" value="#{customersController.selected.postcode}" title="#{configMapController.getKey('CreateCustomersTitle_postcode')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_city')}" for="city" />
                            <p:inputText id="city" value="#{customersController.selected.city}" title="#{configMapController.getKey('CreateCustomersTitle_city')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_addrState')}" for="addrState" />
                            <p:inputText id="addrState" value="#{customersController.selected.addrState}" title="#{configMapController.getKey('CreateCustomersTitle_addrState')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_countryId')}" for="countryId" />
                            <p:inputText id="countryId" value="#{customersController.selected.countryId}" title="#{configMapController.getKey('CreateCustomersTitle_countryId')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_telephone')}" for="telephone" />
                            <p:inputText id="telephone" value="#{customersController.selected.telephone}" title="#{configMapController.getKey('CreateCustomersTitle_telephone')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_fax')}" for="fax" />
                            <p:inputText id="fax" value="#{customersController.selected.fax}" title="#{configMapController.getKey('CreateCustomersTitle_fax')}" />


                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_newsletter')}" for="newsletter" />
                            <h:selectOneMenu id="newsletter" value="#{customersController.selected.newsletter}" title="#{configMapController.getKey('EditCustomersTitle_newsletter')}" >
                                <f:selectItem itemValue="Y" itemLabel="Send Newsletter" />
                                <f:selectItem itemValue="N" itemLabel="Dont Send" />
                            </h:selectOneMenu>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_referredby')}" for="referredby" />
                            <h:selectOneMenu id="referredby" value="#{customersController.selected.referredby}"    title="#{configMapController.getKey('EditCustomersTitle_referredby')}" >
                                <f:selectItems value="#{customersController.itemsAvailableSelectOne}"  />
                            </h:selectOneMenu>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_active')}" for="active" />
                            <p:selectOneMenu id="active" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerStateConverter" value="#{customersController.selected.active}" label="#{configMapController.getKey('CreateCustomersTitle_active')}" >
                                <f:selectItems value="#{customerStateController.itemsAvailableAsObjects}"  var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}"/>                           
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_groupPricing')}" for="groupPricing" />
                            <p:selectOneMenu id="groupPricing" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="planConverter" value="#{customersController.selected.groupPricing}" label="#{configMapController.getKey('CreateCustomersTitle_groupPricing')}" >
                                <f:selectItems value="#{planController.itemsAvailableAsObjects}"  var="plan" itemLabel="#{plan.planName}" itemValue="#{plan}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailFormat')}" for="emailFormat" />
                            <p:selectOneMenu id="emailFormat" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="emailFormatConverter" value="#{customersController.selected.emailFormat}" label="#{configMapController.getKey('CreateCustomersTitle_emailFormat')}" >
                                <f:selectItems value="#{emailFormatController.itemsAvailableAsObjects}"  var="emailFormat" itemLabel="#{emailFormat.emailFormat}" itemValue="#{emailFormat}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_auth')}" for="auth" />
                            <p:selectOneMenu id="auth" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerAuthConverter" value="#{customersController.selected.auth}" label="#{configMapController.getKey('CreateCustomersTitle_auth')}" >
                                <f:selectItems value="#{customerAuthController.itemsAvailableAsObjects}"  var="custAuth" itemLabel="#{custAuth.customerAuthType}" itemValue="#{custAuth}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_demographic')}" for="demographic" />
                            <p:selectOneMenu id="demographic" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="demographicTypesConverter" value="#{customersController.selected.demographic}" label="#{configMapController.getKey('CreateCustomersTitle_demographic')}" >
                                <f:selectItems value="#{demographicTypesController.itemsAvailableAsObjects}"  var="demo" itemLabel="#{demo.name}" itemValue="#{demo}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_preferredContact')}" for="preferredContact" />
                            <p:selectOneMenu id="preferredContact" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="preferedContactConverter" value="#{customersController.selected.preferredContact}" label="#{configMapController.getKey('CreateCustomersTitle_preferredContact')}" >
                                <f:selectItems value="#{preferedContactController.itemsAvailableAsObjects}"  var="prefContact" itemLabel="#{prefContact.preferedContactMethod}" itemValue="#{prefContact}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_password')}" for="password" />
                            <p:password id="password"  value="#{customersController.checkPass}" onfocus="this.select()" feedback="true" title="#{configMapController.getKey('EditCustomersTitle_password')}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_password')}">
                                <p:ajax listener="#{customersController.checkPassChange}" event="keyup" />
                            </p:password>

                            <p:commandButton  id="passButton" ajax="true" actionListener="#{customersController.updatepass}" update=":menuForm:growl"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>
                            <p:outputLabel value=" " for="passButton" />
                            <p:commandButton  id="paymentsButton" ajax="true" actionListener="#{ezidebit.createCustomerRecord()}" update=":menuForm:growl"   value="#{configMapController.getKey('EditCustomersUpdatePayment')}" immediate="true"/>
                            <p:outputLabel value=" " for="paymentsButton" />

                        </p:panelGrid>
                        <p:panel>
                            <p:commandButton id="dialogueSave" oncomplete="tabViewWidget.select(1)"  actionListener="#{customersController.createDialogue}" value="#{configMapController.getKey('CreateCustomersSaveLink')}" update=":tabView:CustomerslistForm1:tableList :menuForm:growl"/>                

                        </p:panel>
                        <!-- </p:confirmDialog>-->
                    </h:form>

                </p:tab>
                <p:tab id="tab3" title="Payment Information"  >  
                    <h:form id="paymentsForm"> 


                        <!--  <p:confirmDialog id="confirmDialogCustomersPayments" message="Payment Information."  
                                           header="#{configMapController.getKey('CreateCustomersPaymentsTitle')}" severity="info" widgetVar="customersPaymentsDialogue">-->


                        <p:outputPanel id="mainPanel">
                            <p:selectBooleanButton value="#{ezidebit.editPaymentDetails}" onLabel="Refresh View" offLabel="Refresh View" rendered="#{ezidebit.customerExistsInPaymentGateway}" >
                                <p:ajax update=":tabView:paymentsForm:viewPaymentsGrid  :tabView:paymentsForm:editPaymentsGrid  :menuForm:growl" process=":tabView:paymentsForm:viewPaymentsGrid  :tabView:paymentsForm:editPaymentsGrid "/>  
                            </p:selectBooleanButton>  
                            <h:outputText id="selectedUser" value="#{customersController.selected.firstname} #{customersController.selected.lastname}" />
                            <p:panelGrid id="dialoguePaymenstGrid2" columns="2" rendered="#{ezidebit.customerExistsInPaymentGateway}" >
                                <p:panel id="viewPaymentsGrid"  >
                                    <iframe id="ezidebitIframeView"  style="width:400px;height:600px" src="#{ezidebit.getEziDebitWidgetUrl(false)}" />
                                </p:panel>
                                <p:panel id="editPaymentsGrid" >
                                    <p:outputLabel value="Edit Payment Details"/> <br/>
                                    <iframe id="ezidebitIframeEdit"  style="width:400px;height:600px" src="#{ezidebit.getEziDebitWidgetUrl(true)}" />
                                </p:panel>
                            </p:panelGrid>
                            <p:panelGrid id="dialoguePaymenstGrid1" columns="2" rendered="#{!ezidebit.customerExistsInPaymentGateway}">
                                <p:commandButton  id="paymentsButton" ajax="true" actionListener="#{ezidebit.createCustomerRecord}" update=":menuForm:growl :tabView:paymentsForm"   value="#{configMapController.getKey('EditCustomersUpdatePayment')}" immediate="true"/>
                                <p:outputLabel value=" " for="paymentsButton" />

                            </p:panelGrid>
                        </p:outputPanel>
                        <!-- </p:confirmDialog>-->
                    </h:form>  
                </p:tab>
                <p:tab id="tab4" title="Customer Notes"  >  

                    <h:form id="formNotesCreate1">
                        <p:confirmDialog id="confirmDialogNotesCreate1" message="Add Customer Natoes"  
                                         header="#{configMapController.getKey('CreateNotesTitle')}" severity="info" widgetVar="NotesCreateDialogue"> 

                            <p:panelGrid columns="2">
                                <p:outputLabel value="#{configMapController.getKey('CreateNotesLabel_note')}" for="note" />
                                <p:inputTextarea rows="4" cols="30" id="note" value="#{notesController.selected.note}" title="#{configMapController.getKey('CreateNotesTitle_note')}" />
                                <p:commandButton oncomplete="NotesCreateDialogue.hide();notesControllerTable.filter()" actionListener="#{notesController.createDialogue}" value="#{configMapController.getKey('CreateNotesSaveLink')}" update=":menuForm:growl :tabView:NoteslistForm1 :tabView:formNotesCreate1"/>                
                            </p:panelGrid>
                        </p:confirmDialog>
                    </h:form>





                    <h:form id="NoteslistForm1">
                        <h:panelGroup >
                            <p:commandButton id="showDialogButton"  value="#{configMapController.getKey('ListNotesCreateLink')}" onclick="NotesCreateDialogue.show()" type="button"/> 

                        </h:panelGroup>
                        <h:outputText escape="false" value="#{configMapController.getKey('ListNotesEmpty')}" rendered="#{customersController.notesItems.rowCount == 0}"/>
                        <h:panelGroup rendered="#{customersController.notesItems.rowCount > 0}">
                            <p:dataTable  editable="true" value="#{customersController.notesItems}" filteredValue="#{customersController.notesFilteredItems}"  widgetVar="notesControllerTable" var="item"  paginator="true" rows="15"  paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <h:outputText value="Search all fields:" />
                                        <h:inputText id="globalFilter" onkeyup="notesControllerTable.filter()" />
                                    </p:outputPanel>
                                </f:facet>
                                <p:ajax event="rowEdit" listener="#{customersController.onNotesEdit}" update=":menuForm:growl" oncomplete="notesControllerTable.filter()" />  
                                <p:ajax event="rowEditCancel" listener="#{customersController.onNotesCancel}" update=":menuForm:growl"  oncomplete="notesControllerTable.filter()" />  

                                <p:column sortBy="#{item.id}" filterBy="#{item.id}" headerText="#{configMapController.getKey('ListNotesTitle_id')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.id}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.id}" label="#{configMapController.getKey('ListNotesTitle_id')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <p:column sortBy="#{item.note}" filterBy="#{item.note}" headerText="#{configMapController.getKey('ListNotesTitle_note')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.note}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.note}" label="#{configMapController.getKey('ListNotesTitle_note')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <p:column sortBy="#{item.createTimestamp}" filterBy="#{item.createTimestamp}" headerText="#{configMapController.getKey('ListNotesTitle_createTimestamp')}"   >

                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.createTimestamp}">
                                                <f:convertDateTime pattern="MM/dd/yyyy HH:mm:ss" />
                                            </h:outputText>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:calendar value="#{item.createTimestamp}">	
                                                <p:ajax event="dateSelect" listener= "#{notesController.handleDateSelect}" update=":menuForm:growl" />
                                            </p:calendar>
                                        </f:facet>
                                    </p:cellEditor> 

                                </p:column>
                                <p:column sortBy="#{item.deleted}" filterBy="#{item.deleted}" headerText="#{configMapController.getKey('ListNotesTitle_deleted')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.deleted}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.deleted}" label="#{configMapController.getKey('ListNotesTitle_deleted')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <p:column sortBy="#{item.userId}" filterBy="#{item.userId}" headerText="#{configMapController.getKey('ListNotesTitle_userId')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.userId.firstname} #{item.userId.lastname}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.userId}" label="#{configMapController.getKey('ListNotesTitle_userId')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <p:column rendered="#{notesController.isUserInRole('ADMIN')}"  headerText="Edit" style="width:50px">  
                                    <p:rowEditor />  
                                </p:column>  

                                <p:column>
                                    <p:commandButton rendered="#{notesController.isUserInRole('ADMIN')}"  oncomplete="notesControllerTable.filter()" update=":menuForm:growl"  value="#{configMapController.getKey('ListNotesDestroyLink')}">
                                        <f:setPropertyActionListener value="#{item}" target="#{customersController.selectedNoteForDeletion}" />
                                    </p:commandButton>                        

                                </p:column>
                            </p:dataTable>
                        </h:panelGroup>
                    </h:form>

                </p:tab>
            </p:tabView>  

        </ui:define>
    </ui:composition>

</html>
