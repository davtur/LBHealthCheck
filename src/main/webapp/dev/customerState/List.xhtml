
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="/WEB-INF/template.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui" >

    
        <ui:define name="title">
            <h:outputText value="#{configMapController.getKey('ListCustomerStateTitle')}"></h:outputText>
        </ui:define>
        <ui:define name="body">


            <h:form id="formCustomerStateCreate1">
                <p:confirmDialog id="confirmDialogCustomerStateCreate1" message="Add a Key/ Value Pair to the configuration table"  
                                 header="#{configMapController.getKey('CreateCustomerStateTitle')}" severity="info" widgetVar="CustomerStateCreateDialogue"> 

                    <p:panelGrid columns="2">
                        <p:outputLabel value="#{configMapController.getKey('CreateCustomerStateLabel_id')}" for="id" />
                        <p:inputText id="id" value="#{customerStateController.selected.id}" title="#{configMapController.getKey('CreateCustomerStateTitle_id')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomerStateRequiredMessage_id')}"/>
                        <p:outputLabel value="#{configMapController.getKey('CreateCustomerStateLabel_customerState')}" for="customerState" />
                        <p:inputText id="customerState" value="#{customerStateController.selected.customerState}" title="#{configMapController.getKey('CreateCustomerStateTitle_customerState')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomerStateRequiredMessage_customerState')}"/>
                        <p:commandButton oncomplete="PF('CustomerStateCreateDialogue').hide();PF('customerStateControllerTable').filter()" actionListener="#{customerStateController.createDialogue}" value="#{configMapController.getKey('CreateCustomerStateSaveLink')}" update=":growl"/>                
                    </p:panelGrid>
                </p:confirmDialog>
            </h:form>





            <h:form id="CustomerStatelistForm1">
                <h:panelGroup >
                    <p:commandButton id="showDialogButton"  value="#{configMapController.getKey('ListCustomerStateCreateLink')}" onclick="PF('CustomerStateCreateDialogue').show()" type="button"/> 

                </h:panelGroup>
                <h:outputText escape="false" value="#{configMapController.getKey('ListCustomerStateEmpty')}" rendered="#{customerStateController.items.rowCount == 0}"/>
                <h:panelGroup rendered="#{customerStateController.items.rowCount > 0}">
                    <p:dataTable  editable="true" value="#{customerStateController.items}" filteredValue="#{customerStateController.filteredItems}"  widgetVar="customerStateControllerTable" var="item"  paginator="true" rows="15"  paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  rowsPerPageTemplate="5,10,15,20,25,50,100" >
                        <f:facet name="header">
                            <p:outputPanel>
                                <h:outputText value="Search all fields:" />
                                <h:inputText id="globalFilter" onkeyup="PF('customerStateControllerTable').filter()" />
                            </p:outputPanel>
                        </f:facet>
                        <p:ajax event="rowEdit" listener="#{customerStateController.onEdit}" update=":growl" oncomplete="PF('customerStateControllerTable').filter()" />  
                        <p:ajax event="rowEditCancel" listener="#{customerStateController.onCancel}" update=":growl"  />  

                        <p:column sortBy="#{item.id}" filterBy="#{item.id}" headerText="#{configMapController.getKey('ListCustomerStateTitle_id')}"   >
                            <p:cellEditor> 
                                <f:facet name="output">
                                    <h:outputText value="#{item.id}"/>
                                </f:facet>
                                <f:facet name="input">
                                    <p:inputText value="#{item.id}" label="#{configMapController.getKey('ListCustomerStateTitle_id')}" />
                                </f:facet>
                            </p:cellEditor> 


                        </p:column>
                        <p:column sortBy="#{item.customerState}" filterBy="#{item.customerState}" headerText="#{configMapController.getKey('ListCustomerStateTitle_customerState')}"   >
                            <p:cellEditor> 
                                <f:facet name="output">
                                    <h:outputText value="#{item.customerState}"/>
                                </f:facet>
                                <f:facet name="input">
                                    <p:inputText value="#{item.customerState}" label="#{configMapController.getKey('ListCustomerStateTitle_customerState')}" />
                                </f:facet>
                            </p:cellEditor> 


                        </p:column>
                        <p:column rendered="#{customerStateController.isUserInRole('ADMIN')}"  headerText="Edit" style="width:50px">  
                            <p:rowEditor />  
                        </p:column>  

                        <p:column>
                            <p:commandButton rendered="#{customerStateController.isUserInRole('ADMIN')}"  oncomplete="PF('customerStateControllerTable').filter()" update=":growl"  value="#{configMapController.getKey('ListCustomerStateDestroyLink')}">
                                <f:setPropertyActionListener value="#{item}" target="#{customerStateController.selectedForDeletion}" />
                            </p:commandButton>                        

                        </p:column>
                    </p:dataTable>
                </h:panelGroup>
            </h:form>
        </ui:define>
    </ui:composition>


