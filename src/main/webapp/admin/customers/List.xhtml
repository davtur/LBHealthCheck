
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="/WEB-INF/template.xhtml" xmlns="http://www.w3.org/1999/xhtml" 
                xmlns:ui="http://java.sun.com/jsf/facelets" 
                xmlns:h="http://java.sun.com/jsf/html" 
                xmlns:f="http://java.sun.com/jsf/core" 
                xmlns:p="http://primefaces.org/ui" >


    <ui:define name="title">
        <h:outputText   value="#{configMapController.getKey('ListCustomersTitle')}"></h:outputText>
    </ui:define>
    <ui:define name="body">
        <div class="layout-portlets-box">
          <!--  <h:form id="devForm">
                <p:outputPanel id="devPanel" rendered="#{customersController.isUserInRole('DEVELOPER')}" styleClass=" DispBlock Fright" >

                    <p:panel id="devEffectPanel" styleClass="updatePaymentInfo">
                        <h:outputText id="devTimeUpdate"  value="Last Payment Update:       #{customersController.testTime} "       styleClass="Fs10">
                            <f:convertDateTime pattern="yyyy-MM-dd hh:mm:ss"  />

                        </h:outputText>
                        <p:effect type="highlight" event="load" delay="0" speed="300"> 
                            <f:param name="mode" value="'show'" />
                        </p:effect>
                    </p:panel>
                    <p:commandButton id="devButton1"     actionListener="#{customersController.dev1}" value="Test1"  update="@(.updatePaymentInfo) :growl" /> 
                    <p:commandButton id="devButton2"     actionListener="#{customersController.dev2}" value="Test2"  update=" :growl" /> 
                    <p:commandButton id="devButton3"     actionListener="#{customersController.dev3}" value="Test3"  update=" :growl" /> 


                </p:outputPanel>
            </h:form>-->

            <p:tabView id="tv" cache="false" prependId="false" class="layout-portlets-box"> 
                <p:ajax  event="tabChange"  listener="#{ezidebit.onTabChange}"  />  


                <p:tab id="tab1" title="Customer List" class="Container100 Responsive100" >  
                    <h:form id="customerslistForm1" styleClass="updatePaymentInfo" >

                        <div class="Container100 Responsive100">
                            <div class="Container20 Responsive">

                                <div class="Container100 TexAlLeft">
                                    <div class="DispInlBlock MarTop20">
                                        <div class="Container20"><i class="fa fa-user Fs50 red Fleft MarRight10"></i></div>
                                        <div class="Container80">
                                            <div class="Fright">
                                                <h2 class="black Fs24 FontRalewayMedium"><h:outputText id="selectedUser" value="#{customersController.selected.firstname} #{customersController.selected.lastname}" /></h2>
                                                <span class="Fs15 gray FontRalewayRegular DispBlock"><h:outputText value="Trainer, " rendered="#{customersController.isCustomerInRole(item,'TRAINER')}" /> <h:outputText value="#{customersController.selected.active.customerState}"/></span>
                                            </div>
                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="Container20 Responsive">

                                <div class="Container100 TexAlRight">

                                    <h:panelGrid columns="2" cellpadding="5" class=" BorderedBox  TexAlRight PadWithBorder5">
                                        <p:selectOneMenu id="active" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerStateControllerConverter"  value="#{customersController.selectedState}" label="#{configMapController.getKey('CreateCustomersTitle_active')}" >
                                            <f:selectItems value="#{customerStateController.itemsAvailableAsObjects}"  var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}"/>                           
                                        </p:selectOneMenu>
                                        <p:commandButton id="changeStateButton"     actionListener="#{customersController.changeCustomersState}" value="#{configMapController.getKey('ListCustomersChangeStateButton')}"  update=":tv:customerslistForm1:customersTableList :growl" /> 

                                    </h:panelGrid >

                                </div>


                            </div>
                            <div class="Container40 Responsive">

                                <div class="Container100 TexAlCenter" >

                                    <div class=" BorderedBox  TexAlCenter " >
                                        <p:outputLabel value="#{configMapController.getKey('ListCustomersStatusButton')}" for="selectedStateCheckbox"/>
                                        <p:selectManyCheckbox id="selectedStateCheckbox"  value="#{customersController.selectedCustomerStates}" label="Show Cancelled"  layout="lineDirection" valueChangeListener="#{customersController.selectShowCancelledBooleanChangeListener}"  >
                                            <f:selectItems value="#{customersController.customerStateList}" var="cs" itemLabel="#{cs.customerState}" itemValue="#{cs}" />
                                            <p:ajax event="change"   update=":tv:customerslistForm1"  /> 
                                        </p:selectManyCheckbox>
                                        <p:selectBooleanCheckbox id="showNonUsers"   value="#{customersController.showNonUsers}" >  
                                            <p:ajax update="@form"   />  
                                        </p:selectBooleanCheckbox> 
                                        <p:outputLabel  value="TRAINERS" for="showNonUsers"/>
                                    </div>

                                </div>


                            </div>



                            <div class="Container20 Responsive">

                                <div class="Container100 TexAlRight">
                                    <h:panelGrid columns="2" cellpadding="5" >
                                        <p:commandButton id="addNoteDialogButton1"  value="#{configMapController.getKey('ListNotesCreateLink')}" onclick="PF('NotesCreateDialogue').show()" type="button"/> 
                                        <p:commandButton id="showDialogButton"  oncomplete="PF('customersCreateDialogue').show()"   actionListener="#{customersController.prepareCreateAjax}" value="#{configMapController.getKey('ListCustomersCreateLink')}"  update=":formCustomersCreate1:dialogueGrid :formCustomersCreate1:dialogueGrid2 :growl" /> 
                                    </h:panelGrid >

                                </div>


                            </div>
                        </div>
                        <div class="Seperator"></div>
                        <div class="Container100">
                            <h:outputText escape="false" value="#{configMapController.getKey('ListCustomersEmpty')}" rendered="#{customersController.items.rowCount == 0}"/>
                            <h:panelGroup rendered="#{customersController.items.rowCount > 0}">
                                <p:dataTable id="customersTableList" 


                                             selection="#{customersController.multiSelected}" 
                                             rowKey="#{item.id}" 
                                             value="#{customersController.items}" 
                                             filteredValue="#{customersController.filteredItems}" 
                                             widgetVar="customersControllerTable" 
                                             editable="true" 

                                             var="item"  
                                             scrollHeight="400"
                                             scrollable="true" >
                                    <f:facet name="header">


                                        <h:panelGroup>
                                            <h:outputText value="Search all fields:" />
                                            <p:inputText id="globalFilter" onkeyup="PF('customersControllerTable').filter();" />
                                        </h:panelGroup>
                                        <h:outputText value="   " />
                                        <h:panelGroup>
                                         <!--   <h:outputText  rendered="#{ customersController.filteredItems != null}" value="#{customersController.filteredItems.size} Records Found"/>-->
                                            <h:outputText  rendered="#{customersController.items != null}" value="#{customersController.items.rowCount} Records Found"/>


                                        </h:panelGroup>

                                    </f:facet>
                                    <p:ajax event="rowSelect"  listener="#{customersController.setSelecteDblClick}" update=":growl :tv:customerslistForm1:selectedUser :tv:formCustomersEdit1 :formCustomersCreate1 :tv:paymentsForm :tv:NoteslistForm1 :confirmCancellation :confirmDialogNotesCreate1"  />  
                                    <p:column selectionMode="multiple" />
                                    <p:column sortBy="#{item.id}" filterBy="#{item.id}" headerText="#{configMapController.getKey('ListCustomersTitle_id')}"   >
                                        <h:outputText value="#{item.id}"/>
                                    </p:column>

                                    <p:column sortBy="#{item.firstname}" filterBy="#{item.firstname}" headerText="#{configMapController.getKey('ListCustomersTitle_firstname')}"   >
                                        <h:outputText value="#{item.firstname}"/>
                                    </p:column>
                                    <p:column sortBy="#{item.lastname}" filterBy="#{item.lastname}" headerText="#{configMapController.getKey('ListCustomersTitle_lastname')}"   >
                                        <h:outputText value="#{item.lastname}"/>
                                    </p:column>
                                    <p:column sortBy="#{item.active.customerState}" filterBy="#{item.active.customerState}" headerText="#{configMapController.getKey('ListCustomersTitle_activeCRM')}"   >
                                       <h:outputText value="LEAD, " rendered="#{customersController.isCustomerInRole(item,'LEAD')}" />  <h:outputText value="TRAINER, " rendered="#{customersController.isCustomerInRole(item,'TRAINER')}" /> <h:outputText value="#{item.active.customerState}"/>                                       
                                    </p:column>
                                    <p:column sortBy="#{item.paymentParameters.statusDescription}" filterBy="#{item.paymentParameters.statusDescription}" headerText="#{configMapController.getKey('ListCustomersTitle_activeEZI')}"   >
                                        <h:outputText value="#{item.paymentParameters.statusDescription}"/> 
                                    </p:column>
                                    <p:column sortBy="#{item.paymentParameters.contractStartDate}" filterBy="#{item.paymentParameters.contractStartDate}" headerText="#{configMapController.getKey('ListCustomersTitle_contractStartDate')}"   >
                                        <h:outputText value="#{item.paymentParameters.contractStartDate}">
                                            <f:convertDateTime pattern="dd MMM yyyy" />
                                        </h:outputText>
                                    </p:column>
                                    <p:column sortBy="#{item.paymentParameters.paymentPeriod}" filterBy="#{item.paymentParameters.paymentPeriod}" headerText="#{configMapController.getKey('ListCustomersTitle_paymentPeriod')}"   >

                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'F'}"  value="Fortnightly" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'M'}"  value="Monthly" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == '4'}"  value="4 Weekly" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'N'}"  value="Weekday in Month" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'Q'}"  value="Quarterly" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'H'}"  value="Half Yearly" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'Y'}"  value="Annually" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'W'}"  value="Weekly" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod == 'Z'}"  value="No Schedule" />
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod != 'Z' and item.paymentParameters.paymentPeriod != 'M' and item.paymentParameters.paymentPeriod != 'Q' and item.paymentParameters.paymentPeriod != 'H' and item.paymentParameters.paymentPeriod != 'Y' }"  value=" - #{item.paymentParameters.paymentPeriodDayOfWeek}"/> 
                                        <h:outputText  rendered="#{item.paymentParameters.paymentPeriod != 'Z' and item.paymentParameters.paymentPeriod == 'M' }"  value=", day-#{item.paymentParameters.paymentPeriodDayOfMonth}"/> 

                                    </p:column>

                                    <p:column sortBy="#{item.paymentParameters.nextScheduledPayment.debitDate}" filterBy="#{item.paymentParameters.nextScheduledPayment.debitDate}" headerText="#{configMapController.getKey('ListCustomersTitle_nextScheduledPayment')}"   >
                                        <h:outputText rendered="#{not empty item.paymentParameters.nextScheduledPayment}"  value="#{item.paymentParameters.nextScheduledPayment.debitDate}">
                                            <f:convertDateTime pattern="E dd MMM yyyy" />
                                        </h:outputText>
                                        <h:outputText rendered="#{empty item.paymentParameters.nextScheduledPayment}" styleClass="red FontBold animated pulse infinite" value="#{configMapController.getKey('paymentsNextScheduledIsNull')}"/>
                                    </p:column>
                                    <p:column sortBy="#{item.paymentParameters.nextScheduledPayment.paymentAmount}" filterBy="#{item.paymentParameters.nextScheduledPayment.paymentAmount}" headerText="#{configMapController.getKey('ListCustomersTitle_nextScheduledPaymentAmount')}"   >
                                        <h:outputText rendered="#{not empty item.paymentParameters.nextScheduledPayment}" value="#{item.paymentParameters.nextScheduledPayment.paymentAmount}">
                                            <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                        </h:outputText>
                                        <h:outputText rendered="#{empty item.paymentParameters.nextScheduledPayment}"  value="---"/>
                                    </p:column>
                                    <p:column sortBy="#{item.paymentParameters.lastSuccessfulScheduledPayment.lastUpdatedDatetime}" filterBy="#{item.paymentParameters.lastSuccessfulScheduledPayment.lastUpdatedDatetime}" headerText="#{configMapController.getKey('ListCustomersTitle_lastUpdated')}"   >
                                        <h:outputText  rendered="#{not empty item.paymentParameters.lastSuccessfulScheduledPayment}"  value="#{item.paymentParameters.lastSuccessfulScheduledPayment.lastUpdatedDatetime}">
                                            <f:convertDateTime  pattern="yyyy-MM-dd hh:mm:ss" />
                                        </h:outputText>
                                        <h:outputText rendered="#{empty item.paymentParameters.lastSuccessfulScheduledPayment}" value="---"/>
                                    </p:column>

                                    <p:column sortBy="#{item.paymentParameters.lastSuccessfulScheduledPayment.paymentAmount}" filterBy="#{item.paymentParameters.lastSuccessfulScheduledPayment.paymentAmount}" headerText="#{configMapController.getKey('ListCustomersTitle_totalPaymentsSuccessfulAmount')}"   >
                                        <h:outputText rendered="#{not empty item.paymentParameters.lastSuccessfulScheduledPayment}" value="#{item.paymentParameters.lastSuccessfulScheduledPayment.paymentAmount}">
                                            <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                        </h:outputText>
                                    </p:column>
                                    <p:column  sortBy="#{item.paymentParameters.lastSuccessfulScheduledPayment.debitDate}" filterBy="#{item.paymentParameters.lastSuccessfulScheduledPayment.debitDate}" headerText="#{configMapController.getKey('ListCustomersTitle_lastSuccessfulScheduledPayment')}"   >
                                        <h:outputText rendered="#{not empty item.paymentParameters.lastSuccessfulScheduledPayment}" value="#{item.paymentParameters.lastSuccessfulScheduledPayment.debitDate}">
                                            <f:convertDateTime pattern="E dd MMM yyyy" />
                                        </h:outputText>
                                        <h:outputText rendered="#{empty item.paymentParameters.lastSuccessfulScheduledPayment}" value="---"/>
                                    </p:column>


                                </p:dataTable>
                            </h:panelGroup>
                        </div>
                    </h:form>
                </p:tab>



                <p:tab id="tab2" title="Edit Customer Details" class="Container100 Responsive100"  >  
                    <h:form id="formCustomersEdit1" >    
                        <!-- <p:log />-->
                        <p:panelGrid id="dialogueGrid1" columns="4">
                            <p:outputLabel value="#{configMapController.getKey('EditCustomersLabel_firstname')}" for="firstname1" />
                            <p:inputText id="firstname1"  value="#{customersController.selected.firstname}" title="#{configMapController.getKey('EditCustomersTitle_firstname')}" valueChangeListener="#{customersController.firstNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_firstname')}">
                                <p:ajax update=":tv:formCustomersEdit1:username1" event="keyup"/>
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_gender')}" title="#{configMapController.getKey('EditCustomersTitle_gender')}" for="gender1" />
                            <p:selectOneMenu id="gender1" value="#{customersController.selected.gender}"   required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_gender')}">
                                <f:selectItem itemValue="M" itemLabel="Male" />
                                <f:selectItem itemValue="F" itemLabel="Female" />
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('EditCustomersLabel_lastname')}" for="lastname1" />
                            <p:inputText id="lastname1" value="#{customersController.selected.lastname}" title="#{configMapController.getKey('EditCustomersTitle_lastname')}" valueChangeListener="#{customersController.lastNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_lastname')}">
                                <p:ajax update=":tv:formCustomersEdit1:username1" event="keyup" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_dob')}" for="dob1" />
                            <p:calendar id="dob1" pattern="dd/MM/yyyy" value="#{customersController.selected.dob}" title="#{configMapController.getKey('CreateCustomersTitle_dob')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_dob')}">
                            </p:calendar>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailAddress')}" for="emailAddress1" />
                            <p:inputText id="emailAddress1" value="#{customersController.selected.emailAddress}" title="#{configMapController.getKey('EditCustomersTitle_emailAddress')}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_emailAddress')}">
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.EmailValidator" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_username')}" for="username1" />
                            <p:inputText id="username1" value="#{customersController.selected.username}" title="#{configMapController.getKey('CreateCustomersTitle_username')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_username')}"/>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_streetAddress')}" for="streetAddress1" />
                            <p:inputText id="streetAddress1" value="#{customersController.selected.streetAddress}" title="#{configMapController.getKey('CreateCustomersTitle_streetAddress')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_suburb')}" for="suburb1" />
                            <p:inputText id="suburb1" value="#{customersController.selected.suburb}" title="#{configMapController.getKey('CreateCustomersTitle_suburb')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_postcode')}" for="postcode1" />
                            <p:inputText id="postcode1" value="#{customersController.selected.postcode}" title="#{configMapController.getKey('CreateCustomersTitle_postcode')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_city')}" for="city1" />
                            <p:inputText id="city1" value="#{customersController.selected.city}" title="#{configMapController.getKey('CreateCustomersTitle_city')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_addrState')}" for="addrState1" />
                            <p:inputText id="addrState1" value="#{customersController.selected.addrState}" title="#{configMapController.getKey('CreateCustomersTitle_addrState')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_countryId')}" for="countryId1" />
                            <p:inputText id="countryId1" value="#{customersController.selected.countryId}" title="#{configMapController.getKey('CreateCustomersTitle_countryId')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_telephone')}" for="telephone1" />
                            <p:inputText id="telephone1" value="#{customersController.selected.telephone}" title="#{configMapController.getKey('CreateCustomersTitle_telephone')}" required="true" >
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.PhoneNumberValidator" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emergencyContactName')}" for="emergencyContactName" />
                            <p:inputText id="emergencyContactName" value="#{customersController.newCustomer.emergencyContactName}" title="#{configMapController.getKey('CreateCustomersTitle_emergencyContactName')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emergencyContactPhone')}" for="emergencyContactPhone" />
                            <p:inputText id="emergencyContactPhone" value="#{customersController.newCustomer.emergencyContactPhone}" title="#{configMapController.getKey('CreateCustomersTitle_emergencyContactPhone')}" >
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.PhoneNumberValidator" />
                            </p:inputText>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_fax')}" for="fax1" />
                            <p:inputText id="fax1" value="#{customersController.selected.fax}" title="#{configMapController.getKey('CreateCustomersTitle_fax')}" />


                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_newsletter')}" title="#{configMapController.getKey('EditCustomersTitle_newsletter')}" for="newsletter1" />
                            <p:selectOneMenu id="newsletter1" value="#{customersController.selected.newsletter}"  >
                                <f:selectItem itemValue="Y" itemLabel="Send Newsletter" />
                                <f:selectItem itemValue="N" itemLabel="Dont Send" />
                            </p:selectOneMenu>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_referredby')}"  title="#{configMapController.getKey('EditCustomersTitle_referredby')}"  for="referredby1" />
                            <p:selectOneMenu id="referredby1" value="#{customersController.selected.referredby}"  filter="true"  filterMatchMode="contains">
                                <f:selectItems value="#{customersController.itemsAvailableSelectOne}"  />
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_groupPricing')}" for="groupPricing1" />
                            <p:selectOneMenu id="groupPricing1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="planControllerConverter" value="#{customersController.selected.groupPricing}" label="#{configMapController.getKey('CreateCustomersTitle_groupPricing')}" >
                                <f:selectItems value="#{planController.itemsAvailableForDisplayAsObjects}"  var="plan" itemLabel="#{plan.planName} - $#{plan.planPrice} "  itemValue="#{plan}"/>
                                <p:ajax update="planDescription"/>
                            </p:selectOneMenu>

                            <p:outputLabel value="#{configMapController.getKey('ViewPlanLabel_planDescription')}" for="planDescription"/>
                            <h:outputText id="planDescription" value="#{customersController.selected.groupPricing.planDescription}" title="#{configMapController.getKey('ViewPlanTitle_planDescription')}"/>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailFormat')}" for="emailFormat1" />
                            <p:selectOneMenu id="emailFormat1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="emailFormatControllerConverter" value="#{customersController.selected.emailFormat}" label="#{configMapController.getKey('CreateCustomersTitle_emailFormat')}" >
                                <f:selectItems value="#{emailFormatController.itemsAvailableAsObjects}"  var="emailFormat" itemLabel="#{emailFormat.emailFormat}" itemValue="#{emailFormat}"/>
                            </p:selectOneMenu>
                            <p:outputLabel rendered="#{false}" value="#{configMapController.getKey('CreateCustomersLabel_auth')}" for="auth1" />
                            <p:selectOneMenu rendered="#{false}" id="auth1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerAuthControllerConverter" value="#{customersController.selected.auth}" label="#{configMapController.getKey('CreateCustomersTitle_auth')}" >
                                <f:selectItems value="#{customerAuthController.itemsAvailableAsObjects}"  var="custAuth" itemLabel="#{custAuth.customerAuthType}" itemValue="#{custAuth}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_demographic')}" for="demographic1" />
                            <p:selectOneMenu id="demographic1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="demographicTypesControllerConverter" value="#{customersController.selected.demographic}" label="#{configMapController.getKey('CreateCustomersTitle_demographic')}" >
                                <f:selectItems value="#{demographicTypesController.itemsAvailableAsObjects}"  var="demo" itemLabel="#{demo.name}" itemValue="#{demo}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_preferredContact')}" for="preferredContact1" />
                            <p:selectOneMenu id="preferredContact1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="preferedContactControllerConverter" value="#{customersController.selected.preferredContact}" label="#{configMapController.getKey('CreateCustomersTitle_preferredContact')}" >
                                <f:selectItems value="#{preferedContactController.itemsAvailableAsObjects}"  var="prefContact" itemLabel="#{prefContact.preferedContactMethod}" itemValue="#{prefContact}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_smsOptions')}"  />
                            <h:panelGrid columns="2" rendered="#{not empty customersController.selected.paymentParameters}" >
                                <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_SmsExpiredCard')}" for="checkbox1" />
                                <p:selectBooleanCheckbox id="checkbox1" value="#{customersController.paymentParametersSmsExpiredCard}"  label="Sms Expired Card" />
                                <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_SmsPaymentReminder')}" for="checkbox2" />
                                <p:selectBooleanCheckbox id="checkbox2" value="#{customersController.paymentParametersSmsPaymentReminder}"  label="Sms Payment Reminder" />
                                <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_SmsFailedNotification')}" for="checkbox3" />
                                <p:selectBooleanCheckbox id="checkbox3" value="#{customersController.paymentParametersSmsFailedNotification}"  label="Sms Failed Notification" />
                            </h:panelGrid>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_password')}" for="passButton" />
                           <!--  <p:password id="password1"  value="#{customersController.checkPass}" onfocus="this.select()" feedback="true" redisplay="true" title="#{configMapController.getKey('EditCustomersTitle_password')}">
                                <p:ajax listener="#{customersController.checkPassChange}" event="keyup" />
                            </p:password>
                            <h:panelGrid  >
                                <p:messages id="messages" showDetail="true" autoUpdate="true"  />
    
                                <h:panelGrid columns="2" id="matchGrid" cellpadding="5">                   
                                    <h:outputLabel for="pwd1" value="Password 1: *" />
                                    <p:password id="pwd1" value="#{customersController.checkPass}" match="pwd2" label="Password 1" feedback="true" required="true" />
    
                                    <h:outputLabel for="pwd2" value="Password 2: *" />
                                    <p:password id="pwd2" value="#{customersController.checkPass}" label="Password 2" required="true" />
                                </h:panelGrid>
                                <p:commandButton  id="passButton" ajax="true" actionListener="#{customersController.updatepass}" update=":growl matchGrid"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>
    
                               <p:commandButton update="matchGrid" value="Save" />
                            </h:panelGrid>  -->
                          <!--  <p:commandButton  id="passButton" ajax="true" actionListener="#{customersController.updatepass}" update=":growl"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>-->
                            <p:commandButton  id="passButton" ajax="true"  onclick="PF('updatePasswordDialogueWidget').show();" update=":growl :updatePass"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_groups')}" for="scroll2" />

                            <p:dataGrid  id="scroll2" columns="3"   value="#{customersController.customerGroupsList}" var="group" rowIndexVar="rowIndex"  >
                                <h:panelGrid id="customerPanel2" columns="2" style="margin-bottom:10px" cellpadding="5" >
                                    <h:outputText value="#{group.groupname}" />
                                    <p:selectBooleanCheckbox id="btnAttendedSession2" value="#{customersController.checkedGroups[rowIndex]}"  >
                                        <p:ajax   event="change" listener="#{customersController.groupChangedChangeListener}"/>
                                    </p:selectBooleanCheckbox>
                                </h:panelGrid>
                            </p:dataGrid>

                        </p:panelGrid>



                        <!-- <p:outputLabel  value="Groups:    " for="selectedGroupsCheckbox2"/>
                         <h:selectManyCheckbox id="selectedGroupsCheckbox2" value="#{customersController.selectedGroups}"    converter="customerGroupsConverter">
                             <f:selectItems value="#{customersController.customerGroupsList}" var="custGroup" itemLabel="#{custGroup.groupname}" itemValue="#{custGroup}" />
    
                         </h:selectManyCheckbox>-->



                        <p:panel>
                            <p:commandButton id="dialogueSave1"  actionListener="#{customersController.editDialogue}" value="#{configMapController.getKey('CreateCustomersSaveLink')}" update=":tv:customerslistForm1:customersTableList :growl"/>                
                            <p:commandButton  value="#{configMapController.getKey('sendCustomerOnBoardEmailButton')}"  actionListener="#{customersController.sendCustomerOnboardEmail}" update="@(.updateNotesDataTable) :growl"/>

                        </p:panel>

                    </h:form>
                </p:tab>













                <!--          $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ PAYMENTS TAB  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ -->




                <p:tab id="tab3" title="Payment Information" rendered="#{ezidebit.paymentGatewayEnabled}" class="Container100 Responsive100" >  
                    <h:form id="paymentsForm" styleClass="updatePaymentInfo"> 

                        <p:panel id="progressBarPanel" rendered="#{ezidebit.asyncOperationRunning}" >
                            <h:outputText id="statusText" value="Please wait while the payment data for #{customersController.selected.firstname} #{customersController.selected.lastname} is loaded..." />
                            <p:commandButton id="reloadPageButton2" value="Reload Page" actionListener="#{ezidebit.refreshPaymentsPage}"  update=":tv:paymentsForm  :growl" />

                        </p:panel>

                        <p:outputPanel id="mainPanel" rendered="#{ezidebit.asyncOperationRunning == false and ezidebit.customerDetailsHaveBeenRetrieved == true  }" >
                            <p:commandButton id="reloadPageButton" value="Reload Page" actionListener="#{ezidebit.refreshPaymentsPage}" rendered="#{ezidebit.customerExistsInPaymentGateway }" update=":tv:paymentsForm  :growl" />
                            <p:commandButton id="paymentsButton" disabled="#{!ezidebit.showAddToPaymentGatewayButton}"    actionListener="#{ezidebit.createCustomerRecord}" update=":growl :tv:paymentsForm "   value="#{configMapController.getKey('EditCustomersUpdatePayment')}" />
                            <p:commandButton id="eddrButton" disabled="#{!ezidebit.showAddToPaymentGatewayButton}"  actionListener="#{ezidebit.updatePaymentScheduleForm}"  oncomplete="PF('createEddrLinkDialogueWidget').show();" update=":growl :tv:paymentsForm :createEddrLink @(.updateNotesDataTable) "   value="#{configMapController.getKey('WebDDRScheduleSetupButton')}" />
                            <p:commandButton  value="#{configMapController.getKey('sendCustomerOnBoardEmailButton')}"  actionListener="#{customersController.sendCustomerOnboardEmail}" update="@(.updateNotesDataTable) :growl"/>

                            <p:commandButton id="editPaymentMethodButton" rendered="#{ezidebit.customerExistsInPaymentGateway == true and ezidebit.customerDetailsHaveBeenRetrieved == true and ezidebit.customerCancelledInPaymentGateway ==false}" onclick="changeiFrameCss" oncomplete="PF('editPaymentMethodDialogueWidget').show();"    value="#{configMapController.getKey('editPaymentMethodButtonLink')}" update=":growl @(.updatePaymentInfo)"  /> 

                            <h:outputText rendered="#{ezidebit.waitingForPaymentDetails}" value="WAITING FOR BANK DETAILS - "/>
                            <h:outputText rendered="#{ezidebit.customerCancelledInPaymentGateway  }" value=" Customer CANCELLED - Payment details can't be modified  "/>
                            <h:outputText rendered="#{!ezidebit.asyncOperationRunning}" value=" Status: Idle"/>
                            <h:outputText rendered="#{ezidebit.asyncOperationRunning}" value="Status: Busy"/>
                        </p:outputPanel>

                        <p:panel  id="paymentsTablePanel2" rendered="#{ezidebit.paymentDBList != null}" >
                            <p:dataTable  id="paymentsTable2"
                                          selectionMode="single"
                                          selection="#{ezidebit.selectedScheduledPayment}" 
                                          value="#{ezidebit.paymentDBList}" 
                                          filteredValue="#{ezidebit.paymentsDBListFilteredItems}"  
                                          widgetVar="paymentsListControllerTable2"
                                          var="pay"  
                                          rowKey="#{pay.id}"
                                          scrollHeight="500"
                                          scrollable="true" 

                                          >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <p:outputPanel>
                                           <!-- <h:outputText  rendered="#{ezidebit.paymentsDBListFilteredItems != null}" value="#{ezidebit.paymentsDBListFilteredItems.size} Records Found" />-->

                                            <h:outputText  rendered="#{ezidebit.paymentDBList != null}" value="#{ezidebit.paymentDBList.rowCount} Records Found" />

                                        </p:outputPanel>
                                        <h:outputText value="Payments" />
                                        <p:commandButton id="logCashPaymentButton" oncomplete="PF('logCashPaymentDialogueWidget').show();"    value="#{configMapController.getKey('logCashPaymentButtonLink')}"  update=":growl " /> 

                                        <p:commandButton id="showAddPaymentButton" rendered="#{ezidebit.waitingForPaymentDetails == false and ezidebit.customerCancelledInPaymentGateway == false and ezidebit.customerExistsInPaymentGateway == true}" oncomplete="PF('createPaymentDialogueWidget').show();"    value="#{configMapController.getKey('AddPaymentButtonLink')}"  update=":growl " /> 
                                        <p:commandButton id="showAddPaymentScheduleButton" rendered="#{ezidebit.waitingForPaymentDetails == false and ezidebit.customerCancelledInPaymentGateway == false and ezidebit.customerExistsInPaymentGateway == true}" oncomplete="PF('createPaymentScheduleDialogueWidget').show();"    value="#{configMapController.getKey('AddPaymentScheduleButtonLink')}" update=":growl "  /> 
                                        <p:commandButton id="showClearScheduleButton" rendered="#{ezidebit.waitingForPaymentDetails == false and ezidebit.customerCancelledInPaymentGateway == false and ezidebit.customerExistsInPaymentGateway == true}" oncomplete="PF('clearScheduleDialogueWidget').show();"    value="#{configMapController.getKey('ClearScheduleButtonLink')}" update=":growl "  /> 

                                        <p:commandButton  process=":tv:paymentsForm:paymentsTable2" rendered="#{fitnessTestChartsController.isUserInRole('ADMIN')}" id="deleteButton" icon="ui-icon-trash"  value="#{configMapController.getKey('Delete')}" actionListener="#{ezidebit.deleteScheduledPayment}" update=":growl :tv:paymentsForm:scheduledPaymentsTable :tv:paymentsForm:paymentsTable2 " disabled="#{empty fitnessTestChartsController.selected}"/>
                                        <p:commandButton id="addNoteDialogButton2"  value="#{configMapController.getKey('ListNotesCreateLink')}" onclick="PF('NotesCreateDialogue').show()" type="button"/> 
                                    </p:outputPanel>
                                </f:facet>

                                <p:ajax event="rowSelect"  listener="#{ezidebit.updateSelectedScheduledPayment}" />
                                <p:ajax event="rowUnselect" /> 
                                <p:column  sortBy="#{pay.paymentID}" filterBy="#{pay.paymentID}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentID')}"   >
                                    <h:outputText value="#{pay.paymentID}"/>
                                    <h:outputText  rendered="#{empty pay.paymentID}"  value="Scheduled" style="background-color: lightseagreen;"/>
                                </p:column>

                                <p:column  sortBy="#{pay.customerName.lastname}" filterBy="#{pay.customerName.lastname}" headerText="#{configMapController.getKey('ListPaymentsTitle_customerName')}"   >
                                    <h:outputText value="#{pay.customerName.firstname} #{pay.customerName.lastname}"/>
                                </p:column>
                                <p:column  sortBy="#{pay.manuallyAddedPayment}" filterBy="#{pay.manuallyAddedPayment}" headerText="#{configMapController.getKey('ListPaymentsTitle_manual')}"   >
                                    <h:outputText rendered="#{pay.manuallyAddedPayment}" value="Manual"/>
                                    <h:outputText rendered="#{!pay.manuallyAddedPayment}" value="Auto"/>
                                </p:column>

                                <p:column  sortBy="#{pay.id}" filterBy="#{pay.id}" headerText="#{configMapController.getKey('ListPaymentsTitle_id')}"   >
                                    <h:outputText value="#{pay.id}"/>
                                </p:column>

                                <p:column  sortBy="#{pay.paymentReference}" filterBy="#{pay.paymentReference}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentReference')}"   >
                                    <h:outputText value="#{pay.paymentReference}"/>
                                </p:column>
                                <p:column  sortBy="#{pay.paymentAmount}" filterBy="#{pay.paymentAmount}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentAmount')}"   >
                                    <h:outputText value="#{pay.paymentAmount}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column  sortBy="#{pay.transactionFeeCustomer}" filterBy="#{pay.transactionFeeCustomer}" headerText="#{configMapController.getKey('ListPaymentsTitle_transactionFeeCustomer')}"   >
                                    <h:outputText value="#{pay.transactionFeeCustomer}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column  sortBy="#{pay.transactionFeeClient}" filterBy="#{pay.transactionFeeClient}" headerText="#{configMapController.getKey('ListPaymentsTitle_transactionFeeClient')}"   >
                                    <h:outputText value="#{pay.transactionFeeClient}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column  sortBy="#{pay.debitDate}" filterBy="#{pay.debitDate}" headerText="#{configMapController.getKey('ListPaymentsTitle_debitDate')}"   >
                                    <h:outputText value="#{pay.debitDate}">
                                        <f:convertDateTime pattern="E dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                                <p:column  sortBy="#{pay.settlementDate}" filterBy="#{pay.settlementDate}" headerText="#{configMapController.getKey('ListPaymentsTitle_settlementDate')}"   >
                                    <h:outputText value="#{pay.settlementDate}">
                                        <f:convertDateTime pattern="E dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                                <p:column  sortBy="#{pay.paymentStatus}" filterBy="#{pay.paymentStatus}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentStatus')}"   >

                                    <h:outputText  rendered="#{pay.paymentStatus == 'W'}"  value="#{pay.paymentStatus} -- Waiting"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'N'}"  value="#{pay.paymentStatus} -- Scheduled"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'U'}"  value="#{pay.paymentStatus} -- Processing" style="color: orange"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'P'}"  value="#{pay.paymentStatus} -- Pending"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'S'}"  value="#{pay.paymentStatus} -- Successful" style="color: green"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'D'}"  value="#{pay.paymentStatus} -- Dis.Insufficient Funds" style="color: red"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'F'}"  value="#{pay.paymentStatus} -- Dishonoured" style="color: red"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'X'}"  value="#{pay.paymentStatus} -- Deleted In PGW" style="color: red"/>
                                    <h:outputText  rendered="#{pay.paymentStatus == 'Y'}"  value="#{pay.paymentStatus} -- Delete Requested" style="color: orange"/>
                                </p:column>


                            </p:dataTable>

                        </p:panel>
                        <p:panel id="customerDetailsPanel" rendered="#{customersController.selected.paymentParameters != null }" header="CRM Customer Record">
                            <p:panelGrid columns="2" style="width:100%">
                                <p:outputLabel value="Customer Name:" /> <h:outputText value="CRM: #{customersController.selected.paymentParameters.customerName}, EZI: #{ezidebit.currentCustomerDetails.customerName.value}"/>
                                <p:outputLabel value="Customer Address:" /> <h:outputText value="CRM: #{customersController.selected.paymentParameters.addressLine1}, EZI: #{ezidebit.currentCustomerDetails.addressLine1.value}, #{ezidebit.currentCustomerDetails.addressSuburb.value} #{ezidebit.currentCustomerDetails.addressState.value} #{ezidebit.currentCustomerDetails.addressPostCode.value}"/>
                                <p:outputLabel value="Contract Start:" /> <h:outputText value="#{customersController.selected.paymentParameters.contractStartDate}"/>
                                <p:outputLabel value="Email Address:" /> <h:outputText value="#{customersController.selected.paymentParameters.email}"/>
                                <p:outputLabel value="Mobile Phone:" /> <h:outputText value="#{customersController.selected.paymentParameters.mobilePhoneNumber}"/>
                                <p:outputLabel value="Ezidebit ID:" /> <h:outputText value="#{customersController.selected.paymentParameters.ezidebitCustomerID}"/>
                                <p:outputLabel value="General  ID:" /> <h:outputText value="#{customersController.selected.paymentParameters.yourGeneralReference}"/>
                                <p:outputLabel value="System   ID:" /> <h:outputText value="#{customersController.selected.paymentParameters.yourSystemReference}"/>
                                <p:outputLabel value="Status:" /> <h:outputText value="#{customersController.selected.paymentParameters.statusDescription}"/>
                                <p:outputLabel value="Payment Method:" /> <h:outputText value="#{customersController.selected.paymentParameters.paymentMethod}"/>
                                <p:outputLabel value="Payment Period" /> <h:outputText value="#{customersController.selected.paymentParameters.paymentPeriod}"/>
                                <p:outputLabel value="Payment Day Of Month" /> <h:outputText value="#{customersController.selected.paymentParameters.paymentPeriodDayOfMonth}"/>
                                <p:outputLabel value="Payment Day of Week" /> <h:outputText value="#{customersController.selected.paymentParameters.paymentPeriodDayOfWeek}"/>
                                <p:outputLabel value="Successful Payments" /> <h:outputText value="#{customersController.selected.paymentParameters.totalPaymentsSuccessful}"/>
                                <p:outputLabel value="Amount Paid" /> <h:outputText value="#{customersController.selected.paymentParameters.totalPaymentsSuccessfulAmount}"><f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                </h:outputText>
                                <p:outputLabel value="Failed Payments" /> <h:outputText value="#{customersController.selected.paymentParameters.totalPaymentsFailed}"/>
                                <p:outputLabel value="Failed Amount" /> <h:outputText value="#{customersController.selected.paymentParameters.totalPaymentsFailedAmount}"><f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                </h:outputText>
                                <p:outputLabel value="Send Expired Card SMS" /> <h:outputText value="#{customersController.selected.paymentParameters.smsExpiredCard}"/>
                                <p:outputLabel value="Send Failed Payment SMS" /> <h:outputText value="#{customersController.selected.paymentParameters.smsFailedNotification}"/>
                                <p:outputLabel value="Send Payment Reminder SMS" /> <h:outputText value="#{customersController.selected.paymentParameters.smsPaymentReminder}"/>
                                <p:outputLabel value="Last Successful Payment" /> <h:outputText value="#{customersController.selected.paymentParameters.lastSuccessfulScheduledPayment.debitDate}"/>
                                <p:outputLabel value="Next Scheduled Payment" /> <h:outputText value="#{customersController.selected.paymentParameters.nextScheduledPayment.debitDate}"/>

                            </p:panelGrid>
                        </p:panel>
                        <p:panel id="paymentsTablePanel" collapsed="true" toggleable="true" header="Completed Payments in Ezidebit" rendered="#{ezidebit.paymentsList != null and ezidebit.customerExistsInPaymentGateway == true}"> 
                            <p:dataTable  id="paymentsTable"
                                          value="#{ezidebit.paymentsList}" 
                                          filteredValue="#{ezidebit.paymentsListFilteredItems}"  
                                          widgetVar="paymentsListControllerTable"
                                          var="pay"  
                                          paginator="true" rows="15"  
                                          paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                                          rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <p:outputPanel>
                                            <!--<h:outputText  rendered="#{ezidebit.paymentsListFilteredItems != null}" value="#{ezidebit.paymentsListFilteredItems.size} Records Found"/>
                                             
                                            <h:outputText  rendered="#{ezidebit.paymentsList != null}" value="#{ezidebit.paymentsList.size} Records Found"/>-->

                                        </p:outputPanel> 

                                        <h:outputText value="Payments" />

                                    </p:outputPanel>
                                </f:facet>
                                <p:column sortBy="#{pay.paymentID.value}" filterBy="#{pay.paymentID.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentID')}"   >
                                    <h:outputText value="#{pay.paymentID.value}"/>
                                </p:column>

                                <p:column sortBy="#{pay.customerName.value}" filterBy="#{pay.customerName.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_customerName')}"   >
                                    <h:outputText value="#{pay.customerName.value}"/>
                                </p:column>
                                <p:column sortBy="#{pay.paymentReference.value}" filterBy="#{pay.paymentReference.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentReference')}"   >
                                    <h:outputText value="#{pay.paymentReference.value}"/>
                                </p:column>
                                <p:column sortBy="#{pay.paymentAmount}" filterBy="#{pay.paymentAmount}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentAmount')}"   >
                                    <h:outputText value="#{pay.paymentAmount}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{pay.paymentStatus.value}" filterBy="#{pay.paymentStatus.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentStatus')}"   >
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'W'}"  value="Waiting"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'P'}"  value="Pending"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'S'}"  value="Successful"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'D'}"  value="Dis.Insufficient Funds"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'F'}"  value="Dishonoured"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'X'}"  value="Deleted In PGW"/>
                                </p:column>
                                <p:column sortBy="#{pay.debitDate.value.toGregorianCalendar().time}" filterBy="#{pay.debitDate.value.toGregorianCalendar().time}" headerText="#{configMapController.getKey('ListPaymentsTitle_debitDate')}"   >
                                    <h:outputText value="#{pay.debitDate.value.toGregorianCalendar().time}">
                                        <f:convertDateTime pattern="dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                            </p:dataTable>

                        </p:panel>

                        <p:panel id="scheduledPaymentsTablePanel"  collapsed="true" toggleable="true"  header="Scheduled Payments in Ezidebit" rendered="#{ezidebit.scheduledPaymentsList != null and ezidebit.customerExistsInPaymentGateway == true}">
                            <p:dataTable id="scheduledPaymentsTable"
                                         selectionMode="single"
                                         selection="#{ezidebit.selectedScheduledPayment}" 
                                         value="#{ezidebit.scheduledPaymentsList}" 
                                         filteredValue="#{ezidebit.scheduledPaymentsListFilteredItems}" 
                                         rowKey="#{payment.id}"
                                         widgetVar="scheduledPaymentsListControllerTable" 
                                         var="payment"  
                                         paginator="true" rows="15"  
                                         paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                                         rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <p:outputPanel>
                                            <!--
                                            <h:outputText  rendered="#{ezidebit.scheduledPaymentsListFilteredItems != null}" value="#{ezidebit.scheduledPaymentsListFilteredItems.size} Records Found"/>
                                           
                                               
                                            <h:outputText  rendered="#{ezidebit.scheduledPaymentsList != null}" value="#{ezidebit.scheduledPaymentsList.size} Records Found"/> -->

                                        </p:outputPanel> 

                                        <h:outputText value="Scheduled Payments" />

                                    </p:outputPanel>
                                </f:facet>


                                <p:column  >
                                    <h:outputText value="#{payment.id}"/>
                                </p:column>

                                <p:column sortBy="#{payment.yourGeneralReference}" filterBy="#{payment.yourGeneralReference}" headerText="#{configMapController.getKey('ListPaymentsTitle_customerName')}"   >
                                    <h:outputText value="#{payment.yourGeneralReference}"/>
                                </p:column>
                                <p:column sortBy="#{payment.paymentReference}" filterBy="#{payment.paymentReference}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentReference')}"   >                                 
                                    <h:outputText value="#{payment.paymentReference}"/>
                                </p:column>
                                <p:column sortBy="#{payment.paymentAmount}" filterBy="#{payment.paymentAmount}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentAmount')}"   >
                                    <h:outputText value="#{payment.paymentAmount}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{payment.paymentDate}" filterBy="#{payment.paymentDate}" headerText="#{configMapController.getKey('ListPaymentsTitle_debitDate')}"   >
                                    <h:outputText value="#{payment.paymentDate}" >
                                        <f:convertDateTime pattern="dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{payment.isManuallyAddedPayment()}" filterBy="#{payment.isManuallyAddedPayment()}" headerText="#{configMapController.getKey('ListPaymentsTitle_manualPayment')}"   >
                                    <h:outputText rendered="#{payment.isManuallyAddedPayment()}" value="Manual"/>
                                    <h:outputText rendered="#{!payment.isManuallyAddedPayment()}" value="Auto"/>
                                </p:column>

                            </p:dataTable>
                        </p:panel>
                        <p:panel id="ezidebitCustomerDetailsPanel" collapsed="true" toggleable="true" rendered="#{ezidebit.currentCustomerDetails != null }" header="Customer Record in EziDebit">
                            <p:panelGrid columns="2" style="width:100%">
                                <p:outputLabel value="Customer Name:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.customerFirstName.value} #{ezidebit.currentCustomerDetails.customerName.value}"/>
                                <p:outputLabel value="Customer Address:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.addressLine2.value} #{ezidebit.currentCustomerDetails.addressLine1.value}, #{ezidebit.currentCustomerDetails.addressSuburb.value} #{ezidebit.currentCustomerDetails.addressState.value} #{ezidebit.currentCustomerDetails.addressPostCode.value}"/>
                                <p:outputLabel value="Contract Start:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.contractStartDate.value}"/>
                                <p:outputLabel value="Email Address:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.email.value}"/>
                                <p:outputLabel value="Mobile Phone:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.mobilePhone.value}"/>
                                <p:outputLabel value="Ezidebit ID:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.ezidebitCustomerID.value}"/>
                                <p:outputLabel value="General  ID:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.yourGeneralReference.value}"/>
                                <p:outputLabel value="System   ID:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.yourSystemReference.value}"/>
                                <p:outputLabel value="Status:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.statusDescription.value}"/>
                                <p:outputLabel value="Payment Method:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentMethod.value}"/>
                                <p:outputLabel value="Payment Period" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentPeriod.value}"/>
                                <p:outputLabel value="Payment Day Of Month" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentPeriodDayOfMonth.value}"/>
                                <p:outputLabel value="Payment Day of Week" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentPeriodDayOfWeek.value}"/>
                                <p:outputLabel value="Successful Payments" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsSuccessful}"/>
                                <p:outputLabel value="Amount Paid" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsSuccessfulAmount}"/>
                                <p:outputLabel value="Failed Payments" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsFailed}"/>
                                <p:outputLabel value="Failed Amount" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsFailedAmount}"/>
                                <p:outputLabel value="Send Expired Card SMS" /> <h:outputText value="#{ezidebit.currentCustomerDetails.smsExpiredCard.value}"/>
                                <p:outputLabel value="Send Failed Payment SMS" /> <h:outputText value="#{ezidebit.currentCustomerDetails.smsFailedNotification.value}"/>
                                <p:outputLabel value="Send Payment Reminder SMS" /> <h:outputText value="#{ezidebit.currentCustomerDetails.smsPaymentReminder.value}"/>

                            </p:panelGrid>
                        </p:panel>
                      <!--  <p:remoteCommand name="taskCompleted"   actionListener="#{ezidebit.remoteCommandListener}"  />-->
                    </h:form>  
                </p:tab>









                <p:tab id="tab4" title="Customer Notes"  class="Container100 Responsive100" >  


                    <h:form id="NoteslistForm1" styleClass="updatePaymentInfo">

                        <h:outputText id="selectedUser3" value=" #{customersController.selected.firstname} #{customersController.selected.lastname} " />
                        <h:outputText escape="false" value="#{configMapController.getKey('ListNotesEmpty')}" rendered="#{customersController.notesItems.rowCount == 0}"/>

                        <p:dataTable  editable="true" 
                                      styleClass="updateNotesDataTable"
                                      value="#{customersController.notesItems}" 
                                      filteredValue="#{customersController.notesFilteredItems}"  
                                      widgetVar="notesControllerTable" 
                                      rendered="#{customersController.notesItems.rowCount > 0}"
                                      var="item" 
                                      selection="#{customersController.selectedNoteForDeletion}" 
                                      rowKey="#{item.id}"
                                      paginator="true" 
                                      rows="15"   
                                      paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                                      rowsPerPageTemplate="5,10,15,20,25,50,100" >
                            <f:facet name="header">
                                <p:outputPanel>
                                    <h:outputText value="Notes" />

                                </p:outputPanel>
                                <p:outputPanel>
                                    <p:commandButton rendered="#{notesController.isUserInRole('ADMIN')}"  oncomplete="PF('notesControllerTable').filter()" update=":growl"  value="#{configMapController.getKey('ListNotesDestroyLink')}" actionListener="#{customersController.deleteNote}"/>
                                    <p:commandButton id="showDialogButton2"  value="#{configMapController.getKey('ListNotesCreateLink')}" onclick="PF('NotesCreateDialogue').show()" type="button"/> 
                                   <!-- <p:commandButton   value="TEST" update="@(.updateNotesDataTable)" actionListener="#{customersController.testRequestContext}" /> -->
                                </p:outputPanel>
                            </f:facet>
                            <p:ajax event="rowEdit" listener="#{customersController.onNotesEdit}" update=":growl" oncomplete="PF('notesControllerTable').filter()" />  
                            <p:ajax event="rowEditCancel" listener="#{customersController.onNotesCancel}" update=":growl" />  
                            <p:column selectionMode="single" width="50"/>
                            <p:column rendered="#{notesController.isUserInRole('ADMIN')}"  headerText="Edit" style="width:50px">  
                                <p:rowEditor />  
                            </p:column>  
                            <p:column sortBy="#{item.createTimestamp}" filterOptions="" filterBy="#{item.createTimestamp}" headerText="#{configMapController.getKey('ListNotesTitle_createTimestamp')}"  width="150" >

                                <p:cellEditor> 
                                    <f:facet name="output">
                                        <h:outputText value="#{item.createTimestamp}">
                                            <f:convertDateTime pattern="dd/MM/yyyy HH:mm:ss" />
                                        </h:outputText>
                                    </f:facet>
                                    <f:facet name="input">
                                        <p:calendar value="#{item.createTimestamp}">	
                                            <p:ajax event="dateSelect" listener= "#{notesController.handleDateSelect}" update=":growl" />
                                        </p:calendar>
                                    </f:facet>
                                </p:cellEditor> 

                            </p:column>
                            <p:column  sortBy="#{item.createdBy.lastname}" filterBy="#{item.createdBy.lastname}" headerText="#{configMapController.getKey('ListNotesTitle_createdBY')}"   >
                                <h:outputText value="#{item.createdBy.firstname} #{item.createdBy.lastname}"/>
                            </p:column>
                            <p:column sortBy="#{item.note}" filterBy="#{item.note}"  filterMatchMode="contains" headerText="#{configMapController.getKey('ListNotesTitle_note')}"   >
                                <p:cellEditor> 
                                    <f:facet name="output">
                                        <h:outputText value="#{item.note}"/>
                                    </f:facet>
                                    <f:facet name="input">
                                        <p:inputText value="#{item.note}" label="#{configMapController.getKey('ListNotesTitle_note')}" />
                                    </f:facet>
                                </p:cellEditor> 


                            </p:column>

                        </p:dataTable>

                    </h:form>

                </p:tab>
            </p:tabView>  


            <!--      <h:form id="remoteCommandForm">
                      <p:remoteCommand name="connectPushServer" actionListener="#{ezidebit.checkPushChannelIsOpen}" autoRun="true" />
                  </h:form>
                  <p:socket onMessage="handleMessage" onError="handleError" onTransportFailure="handleTransportFailure"  onClose="handleClose" channel="/payments" onOpen="" onReconnect="handleReconnect" autoConnect="false"  widgetVar="subscriber"/>
                  <script type="text/javascript">
                      function handleMessage(facesmessage) {
                          console.log("Handling primfaces push socket component faces MESSAGE");
                          facesmessage.severity = 'info';
                          taskCompleted();
                          PF('growlWidget').show([facesmessage]);
      
                      }
                      function handleError() {
                          console.log("Handling primfaces push socket component faces ERROR message");
                      }
                      function handleClose() {
                          console.log("Handling primfaces push socket component faces CLOSE message");
                          PF('subscriber').connect();
                      }
                      function handleClose() {
                          console.log("Handling primfaces push socket component faces OPEN message");
      
                      }
                      function handleReconnect() {
                          console.log("Handling primfaces push socket component faces RECONNECT message");
                      }
                      function handleTransportFailure() {
                          console.log("Handling primfaces push socket component faces TRANSPORT FAILURE message");
                          PF('subscriber').connect();
                      }
                      function changeiFrameCss() {
                          alert('bugger1');
                          $('#ezidebitIframeView').find('#wrapper').css('height', '380px');
                          alert('bugger2');
                          $('#ezidebitIframeView').find('#content').css('background-color', 'red');
                          alert('bugger3');
                      }
                  </script>-->
            <ui:include src="Create.xhtml"/>
            <ui:include src="CreateSchedule.xhtml"/>
            <ui:include src="ClearSchedule.xhtml"/>
            <ui:include src="CreateEddrLink.xhtml"/>
            <ui:include src="CreatePayment.xhtml"/>
            <ui:include src="LogCashPayment.xhtml"/>
            <ui:include src="AddCustomerNotesDialogue.xhtml"/>
            <ui:include src="confirmCancelDialogue.xhtml"/>
            <ui:include src="EditPaymentMethod.xhtml"/>
            <ui:include src="UpdatePassword.xhtml"/>
        </div>
    </ui:define>
</ui:composition>


<!--

           <script type="text/javascript">
                //   <![CDATA[
              $(document).ready(function() {
                    // this is needed to modify request parameters 
                    // as PrimeFaces does not transfer the attributes correctly 
                    // and does not expose all the parameters as tag attributes 
                  PF('subscriber').cfg.request.trackMessageLength = true;
                    //PF('subscriber').connect(); 
                });
                function handleMessage(facesmessage) {
                    facesmessage.severity = 'info';
                    taskCompleted();
                    PF('growlWidget').show([facesmessage]);
                    // this is needed for long-polling, bug in atmosphere...
                    if (PF('subscriber').connection.response.status === 200) {
                        PF('subscriber').connection.response.request.requestCount-;
                    }
                }
                // ]]>
            </script>



-->