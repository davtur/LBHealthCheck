<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:ui="http://java.sun.com/jsf/facelets" 
      xmlns:h="http://java.sun.com/jsf/html" 
      xmlns:f="http://java.sun.com/jsf/core" 
      xmlns:p="http://primefaces.org/ui" >

    <ui:composition template="/template.xhtml">
        <ui:define name="title">
            <h:outputText  value="#{configMapController.getKey('ListCustomersTitle')}"></h:outputText>
        </ui:define>
        <ui:define name="body">
<!--  <p:poll  id="poller1" widgetVar="paymentPoller" interval="3" listener="#{ezidebit.pollerListener}" autoStart="#{ezidebit.autoStartPoller}" stop="#{ezidebit.asyncOperationRunning}" update=":paymentsForm :growl"  />-->


            <p:tabView id="tv" cache="false" prependId="false"> 
                <p:ajax  event="tabChange"  listener="#{ezidebit.onTabChange}"  />  


                <p:tab id="tab1" title="Customer List" >  
                    <h:form id="customerslistForm1">
                        <p:panelGrid columns="2" style="width:100%;">
                            <p:commandButton id="showDialogButton"  oncomplete="PF('customersCreateDialogue').show()"   actionListener="#{customersController.prepareCreateAjax}" value="#{configMapController.getKey('ListCustomersCreateLink')}"  update=":formCustomersCreate1:dialogueGrid  :growl" /> 

                            <h:panelGroup id="customerChangeStatusPanel">
                                <p:commandButton id="changeStateButton"     actionListener="#{customersController.changeCustomersState}" value="#{configMapController.getKey('ListCustomersChangeStateButton')}"  update=":tv:customerslistForm1:customersTableList :growl" /> 
                                <p:selectOneMenu id="active" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerStateConverter" value="#{customersController.selectedState}" label="#{configMapController.getKey('CreateCustomersTitle_active')}" >
                                    <f:selectItems value="#{customerStateController.itemsAvailableAsObjects}"  var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}"/>                           
                                </p:selectOneMenu>
                            </h:panelGroup >
                            <h:panelGroup id="selectedUserPanel">                 
                                <p:commandButton id="selectCustomerButton"   actionListener="#{customersController.setSelectedCustomer}" value="#{configMapController.getKey('ListCustomersSelectCustomersButton')}" title="#{configMapController.getKey('ListCustomersSelectCustomersButtonHelp')}" update=":tv:customerslistForm1 :tv:formCustomersEdit1 :tv:NoteslistForm1 :tv:paymentsForm :growl" /> 
                            <h:outputText id="selectedUser" value="Selected: #{customersController.selected.firstname} #{customersController.selected.lastname}" />
                            </h:panelGroup >
                            <h:panelGrid columns="2">
                                <p:outputLabel  value="Filter:    " for="selectedStateCheckbox"/>
                                <p:selectManyCheckbox id="selectedStateCheckbox" value="#{customersController.selectedCustomerStates}" label="Show Cancelled" valueChangeListener="#{customersController.selectShowCancelledBooleanChangeListener}"  converter="customerStateConverter">
                                    <f:selectItems value="#{customersController.customerStateList}" var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}" />
                                    <p:ajax event="change"   update=":tv:customerslistForm1"  /> 
                                </p:selectManyCheckbox>
                            </h:panelGrid>


                        </p:panelGrid>
                        <h:outputText escape="false" value="#{configMapController.getKey('ListCustomersEmpty')}" rendered="#{customersController.items.rowCount == 0}"/>
                        <h:panelGroup rendered="#{customersController.items.rowCount > 0}">
                            <p:dataTable id="customersTableList" 


                                         selection="#{customersController.multiSelected}" 
                                         rowKey="#{item.id}" 
                                         value="#{customersController.items}" 
                                         filteredValue="#{customersController.filteredItems}" 
                                         widgetVar="customersControllerTable" 
                                         editable="true" 
                                         var="item"  
                                         paginator="true" 
                                         rows="15"  
                                         paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                                         rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <h:outputText value="Search all fields:" />
                                        <p:inputText id="globalFilter" onkeyup="PF('customersControllerTable').filter();" />
                                    </p:outputPanel>
                                </f:facet>
                                <!--<p:ajax event="rowEdit"   listener="#{customersController.onEdit}" update=":growl"  />  
                                <p:ajax event="rowEditCancel" listener="#{customersController.onCancel}" update=":growl"   /> -->
                                <p:ajax event="rowSelect"   update=":growl :tv:customerslistForm1:selectedUser :tv:formCustomersEdit1 :formCustomersCreate1 :tv:paymentsForm :tv:NoteslistForm1 :tv:iFrameForm"  />  
                                <p:column selectionMode="multiple" />
                                <p:column sortBy="#{item.firstname}" filterBy="#{item.firstname}" headerText="#{configMapController.getKey('ListCustomersTitle_firstname')}"   >
                                    <h:outputText value="#{item.firstname}"/>
                                </p:column>
                                <p:column sortBy="#{item.lastname}" filterBy="#{item.lastname}" headerText="#{configMapController.getKey('ListCustomersTitle_lastname')}"   >
                                    <h:outputText value="#{item.lastname}"/>
                                </p:column>
                                <p:column sortBy="#{item.dob}" filterBy="#{item.dob}" headerText="#{configMapController.getKey('ListCustomersTitle_dob')}"   >
                                    <h:outputText value="#{item.dob}">
                                        <f:convertDateTime pattern="dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{item.emailAddress}" filterBy="#{item.emailAddress}" headerText="#{configMapController.getKey('ListCustomersTitle_emailAddress')}"   >
                                    <h:outputText value="#{item.emailAddress}"/>
                                </p:column>
                                <p:column sortBy="#{item.active.customerState}" filterBy="#{item.active.customerState}" headerText="#{configMapController.getKey('ListCustomersTitle_active')}"   >
                                    <h:outputText value="#{item.active.customerState}"/>
                                </p:column>

                            </p:dataTable>
                        </h:panelGroup>
                    </h:form>
                </p:tab>


                <p:tab id="tab2" title="Edit Customer Details"  >  
                    <h:form id="formCustomersEdit1">    
                        <!-- <p:log />-->
                        <p:panelGrid id="dialogueGrid1" columns="4">
                            <p:outputLabel value="#{configMapController.getKey('EditCustomersLabel_firstname')}" for="firstname1" />
                            <p:inputText id="firstname1"  value="#{customersController.selected.firstname}" title="#{configMapController.getKey('EditCustomersTitle_firstname')}" valueChangeListener="#{customersController.firstNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_firstname')}">
                                <p:ajax update=":tv:formCustomersEdit1:username1" event="keyup"/>
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_gender')}" title="#{configMapController.getKey('EditCustomersTitle_gender')}" for="gender1" />
                            <p:selectOneMenu id="gender1" value="#{customersController.selected.gender}"   required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_gender')}">
                                <f:selectItem itemValue="M" itemLabel="Male" />
                                <f:selectItem itemValue="F" itemLabel="Female" />
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('EditCustomersLabel_lastname')}" for="lastname1" />
                            <p:inputText id="lastname1" value="#{customersController.selected.lastname}" title="#{configMapController.getKey('EditCustomersTitle_lastname')}" valueChangeListener="#{customersController.lastNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_lastname')}">
                                <p:ajax update=":tv:formCustomersEdit1:username1" event="keyup" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_dob')}" for="dob1" />
                            <p:calendar id="dob1" pattern="MM/dd/yyyy" value="#{customersController.selected.dob}" title="#{configMapController.getKey('CreateCustomersTitle_dob')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_dob')}">
                            </p:calendar>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailAddress')}" for="emailAddress1" />
                            <p:inputText id="emailAddress1" value="#{customersController.selected.emailAddress}" title="#{configMapController.getKey('EditCustomersTitle_emailAddress')}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_emailAddress')}">
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.EmailValidator" />
                            </p:inputText>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_username')}" for="username1" />
                            <p:inputText id="username1" value="#{customersController.selected.username}" title="#{configMapController.getKey('CreateCustomersTitle_username')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_username')}"/>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_streetAddress')}" for="streetAddress1" />
                            <p:inputText id="streetAddress1" value="#{customersController.selected.streetAddress}" title="#{configMapController.getKey('CreateCustomersTitle_streetAddress')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_suburb')}" for="suburb1" />
                            <p:inputText id="suburb1" value="#{customersController.selected.suburb}" title="#{configMapController.getKey('CreateCustomersTitle_suburb')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_postcode')}" for="postcode1" />
                            <p:inputText id="postcode1" value="#{customersController.selected.postcode}" title="#{configMapController.getKey('CreateCustomersTitle_postcode')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_city')}" for="city1" />
                            <p:inputText id="city1" value="#{customersController.selected.city}" title="#{configMapController.getKey('CreateCustomersTitle_city')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_addrState')}" for="addrState1" />
                            <p:inputText id="addrState1" value="#{customersController.selected.addrState}" title="#{configMapController.getKey('CreateCustomersTitle_addrState')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_countryId')}" for="countryId1" />
                            <p:inputText id="countryId1" value="#{customersController.selected.countryId}" title="#{configMapController.getKey('CreateCustomersTitle_countryId')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_telephone')}" for="telephone1" />
                            <p:inputText id="telephone1" value="#{customersController.selected.telephone}" title="#{configMapController.getKey('CreateCustomersTitle_telephone')}" />
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_fax')}" for="fax1" />
                            <p:inputText id="fax1" value="#{customersController.selected.fax}" title="#{configMapController.getKey('CreateCustomersTitle_fax')}" />


                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_newsletter')}" title="#{configMapController.getKey('EditCustomersTitle_newsletter')}" for="newsletter1" />
                            <p:selectOneMenu id="newsletter1" value="#{customersController.selected.newsletter}"  >
                                <f:selectItem itemValue="Y" itemLabel="Send Newsletter" />
                                <f:selectItem itemValue="N" itemLabel="Dont Send" />
                            </p:selectOneMenu>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_referredby')}"  title="#{configMapController.getKey('EditCustomersTitle_referredby')}"  for="referredby1" />
                            <p:selectOneMenu id="referredby1" value="#{customersController.selected.referredby}"   >
                                <f:selectItems value="#{customersController.itemsAvailableSelectOne}"  />
                            </p:selectOneMenu>

                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_active')}" for="active1" />
                            <p:selectOneMenu id="active1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerStateConverter" value="#{customersController.selected.active}" label="#{configMapController.getKey('CreateCustomersTitle_active')}" >
                                <f:selectItems value="#{customerStateController.itemsAvailableAsObjects}"  var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}"/>                           
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_groupPricing')}" for="groupPricing1" />
                            <p:selectOneMenu id="groupPricing1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="planConverter" value="#{customersController.selected.groupPricing}" label="#{configMapController.getKey('CreateCustomersTitle_groupPricing')}" >
                                <f:selectItems value="#{planController.itemsAvailableAsObjects}"  var="plan" itemLabel="#{plan.planName}" itemValue="#{plan}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailFormat')}" for="emailFormat1" />
                            <p:selectOneMenu id="emailFormat1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="emailFormatConverter" value="#{customersController.selected.emailFormat}" label="#{configMapController.getKey('CreateCustomersTitle_emailFormat')}" >
                                <f:selectItems value="#{emailFormatController.itemsAvailableAsObjects}"  var="emailFormat" itemLabel="#{emailFormat.emailFormat}" itemValue="#{emailFormat}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_auth')}" for="auth1" />
                            <p:selectOneMenu id="auth1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerAuthConverter" value="#{customersController.selected.auth}" label="#{configMapController.getKey('CreateCustomersTitle_auth')}" >
                                <f:selectItems value="#{customerAuthController.itemsAvailableAsObjects}"  var="custAuth" itemLabel="#{custAuth.customerAuthType}" itemValue="#{custAuth}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_demographic')}" for="demographic1" />
                            <p:selectOneMenu id="demographic1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="demographicTypesConverter" value="#{customersController.selected.demographic}" label="#{configMapController.getKey('CreateCustomersTitle_demographic')}" >
                                <f:selectItems value="#{demographicTypesController.itemsAvailableAsObjects}"  var="demo" itemLabel="#{demo.name}" itemValue="#{demo}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_preferredContact')}" for="preferredContact1" />
                            <p:selectOneMenu id="preferredContact1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="preferedContactConverter" value="#{customersController.selected.preferredContact}" label="#{configMapController.getKey('CreateCustomersTitle_preferredContact')}" >
                                <f:selectItems value="#{preferedContactController.itemsAvailableAsObjects}"  var="prefContact" itemLabel="#{prefContact.preferedContactMethod}" itemValue="#{prefContact}"/>
                            </p:selectOneMenu>
                            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_password')}" for="password1" />
                            <p:password id="password1"  value="#{customersController.checkPass}" onfocus="this.select()" feedback="true" title="#{configMapController.getKey('EditCustomersTitle_password')}">
                                <p:ajax listener="#{customersController.checkPassChange}" event="keyup" />
                            </p:password>
                            <p:commandButton  id="passButton" ajax="true" actionListener="#{customersController.updatepass}" update=":growl"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>
                            <p:panel>
                                <p:commandButton id="dialogueSave1"  actionListener="#{customersController.createDialogue}" value="#{configMapController.getKey('CreateCustomersSaveLink')}" update=":tv:customerslistForm1:customersTableList :growl"/>                
                            </p:panel>
                        </p:panelGrid>
                    </h:form>
                </p:tab>













                <!--          $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ PAYMENTS TAB  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ -->







                <p:tab id="tab3" title="Payment Information" rendered="#{ezidebit.paymentGatewayEnabled}" >  
                    <h:form id="paymentsForm" > 

                        <p:panel id="progressBarPanel" rendered="#{ezidebit.asyncOperationRunning}" >
                            <h:outputText id="statusText" value="Please wait while the payment data for #{customersController.selected.firstname} #{customersController.selected.lastname} is loaded..." />
                            <p:selectBooleanButton value="#{ezidebit.editPaymentDetails}" onLabel="Refresh View" offLabel="Refresh View"  >
                                <p:ajax update=":tv:iFrameForm :tv:paymentsForm  :growl" process=":tv:iFrameForm "/>  
                            </p:selectBooleanButton>  
                        </p:panel>

                        <p:outputPanel id="mainPanel" rendered="#{ezidebit.asyncOperationRunning == false and ezidebit.customerDetailsHaveBeenRetrieved == true  and ezidebit.customerExistsInPaymentGateway == true}" >
                            <p:selectBooleanButton value="#{ezidebit.editPaymentDetails}" onLabel="Refresh View" offLabel="Refresh View" rendered="#{ezidebit.customerExistsInPaymentGateway}" >
                                <p:ajax update=":tv:iFrameForm :tv:paymentsForm  :growl" process=":tv:iFrameForm "/>  
                            </p:selectBooleanButton>  
                            <p:commandButton id="showAddPaymentButton"  oncomplete="PF('createPaymentDialogueWidget').show();"    value="#{configMapController.getKey('AddPaymentButtonLink')}"  update=":growl " /> 
                            <p:commandButton id="showAddPaymentScheduleButton"  oncomplete="PF('createPaymentScheduleDialogueWidget').show();"    value="#{configMapController.getKey('AddPaymentScheduleButtonLink')}" update=":growl "  /> 
                            <h:outputText rendered="#{!ezidebit.asyncOperationRunning}" value="Idle"/>
                            <h:outputText rendered="#{ezidebit.asyncOperationRunning}" value="Busy"/>
                        </p:outputPanel>


                        <p:panel  id="paymentsTablePanel" rendered="#{ezidebit.paymentsList != null and ezidebit.customerExistsInPaymentGateway == true}">
                            <p:dataTable  id="paymentsTable"
                                          value="#{ezidebit.paymentsList}" 
                                          filteredValue="#{ezidebit.paymentsListFilteredItems}"  
                                          widgetVar="paymentsListControllerTable"
                                          var="pay"  
                                          paginator="true" rows="15"  
                                          paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                                          rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <h:outputText value="Payments" />

                                    </p:outputPanel>
                                </f:facet>
                                <p:column sortBy="#{pay.customerName.value}" filterBy="#{pay.customerName.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_customerName')}"   >
                                    <h:outputText value="#{pay.customerName.value}"/>
                                </p:column>
                                <p:column sortBy="#{pay.paymentReference.value}" filterBy="#{pay.paymentReference.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentReference')}"   >
                                    <h:outputText value="#{pay.paymentReference.value}"/>
                                </p:column>
                                <p:column sortBy="#{pay.paymentAmount}" filterBy="#{pay.paymentAmount}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentAmount')}"   >
                                    <h:outputText value="#{pay.paymentAmount}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{pay.paymentStatus.value}" filterBy="#{pay.paymentStatus.value}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentStatus')}"   >
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'W'}"  value="Waiting"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'P'}"  value="Pending"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'S'}"  value="Successful"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'D'}"  value="Dis.Insufficient Funds"/>
                                    <h:outputText  rendered="#{pay.paymentStatus.value == 'F'}"  value="Dishonoured"/>
                                </p:column>
                                <p:column sortBy="#{pay.debitDate.value.toGregorianCalendar().time}" filterBy="#{pay.debitDate.value.toGregorianCalendar().time}" headerText="#{configMapController.getKey('ListPaymentsTitle_debitDate')}"   >
                                    <h:outputText value="#{pay.debitDate.value.toGregorianCalendar().time}">
                                        <f:convertDateTime pattern="dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                            </p:dataTable>
                        </p:panel>

                        <p:panel id="scheduledPaymentsTablePanel" rendered="#{ezidebit.scheduledPaymentsList != null and ezidebit.customerExistsInPaymentGateway == true}">
                            <p:dataTable id="scheduledPaymentsTable"
                                         selectionMode="single"
                                         selection="#{ezidebit.selectedScheduledPayment}" 
                                         value="#{ezidebit.scheduledPaymentsList}" 
                                         filteredValue="#{ezidebit.scheduledPaymentsListFilteredItems}" 
                                         rowKey="#{payment.id}"
                                         widgetVar="scheduledPaymentsListControllerTable" 
                                         var="payment"  
                                         paginator="true" rows="15"  
                                         paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  
                                         rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <h:outputText value="Scheduled Payments" />

                                    </p:outputPanel>
                                </f:facet>
                                <p:ajax event="rowSelect"   update="deleteButton"/>
                                <p:ajax event="rowUnselect" update="deleteButton"/>

                                <p:column  >
                                    <h:outputText value="#{payment.id}"/>
                                </p:column>

                                <p:column sortBy="#{payment.yourGeneralReference}" filterBy="#{payment.yourGeneralReference}" headerText="#{configMapController.getKey('ListPaymentsTitle_customerName')}"   >
                                    <h:outputText value="#{payment.yourGeneralReference}"/>
                                </p:column>
                                <p:column sortBy="#{payment.paymentReference}" filterBy="#{payment.paymentReference}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentReference')}"   >                                 
                                    <h:outputText value="#{payment.paymentReference}"/>
                                </p:column>
                                <p:column sortBy="#{payment.paymentAmount}" filterBy="#{payment.paymentAmount}" headerText="#{configMapController.getKey('ListPaymentsTitle_paymentAmount')}"   >
                                    <h:outputText value="#{payment.paymentAmount}">
                                        <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{payment.paymentDate}" filterBy="#{payment.paymentDate}" headerText="#{configMapController.getKey('ListPaymentsTitle_debitDate')}"   >
                                    <h:outputText value="#{payment.paymentDate}" >
                                        <f:convertDateTime pattern="dd MMM yyyy" />
                                    </h:outputText>
                                </p:column>
                                <p:column sortBy="#{payment.isManuallyAddedPayment()}" filterBy="#{payment.isManuallyAddedPayment()}" headerText="#{configMapController.getKey('ListPaymentsTitle_manualPayment')}"   >
                                    <h:outputText rendered="#{payment.isManuallyAddedPayment()}" value="Manual"/>
                                    <h:outputText rendered="#{!payment.isManuallyAddedPayment()}" value="Auto"/>
                                </p:column>
                                <f:facet name="footer">
                                    <p:commandButton  process="scheduledPaymentsTable" rendered="#{fitnessTestChartsController.isUserInRole('ADMIN')}" id="deleteButton" icon="ui-icon-trash"  value="#{configMapController.getKey('Delete')}" actionListener="#{ezidebit.deleteScheduledPayment}" update=":growl " disabled="#{empty fitnessTestChartsController.selected}"/>
                                </f:facet>

                            </p:dataTable>
                        </p:panel>
                        <p:panel id="ezidebitCustomerDetailsPanel" rendered="#{ezidebit.currentCustomerDetails != null }" header="EziDebit Customer Record">
                            <p:panelGrid columns="2" style="width:100%">
                                <p:outputLabel value="Customer Name:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.customerFirstName.value} #{ezidebit.currentCustomerDetails.customerName.value}"/>
                                <p:outputLabel value="Customer Address:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.addressLine2.value} #{ezidebit.currentCustomerDetails.addressLine1.value}, #{ezidebit.currentCustomerDetails.addressSuburb.value} #{ezidebit.currentCustomerDetails.addressState.value} #{ezidebit.currentCustomerDetails.addressPostCode.value}"/>
                                <p:outputLabel value="Contract Start:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.contractStartDate.value}"/>
                                <p:outputLabel value="Email Address:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.email.value}"/>
                                <p:outputLabel value="Mobile Phone:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.mobilePhone.value}"/>
                                <p:outputLabel value="Ezidebit ID:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.ezidebitCustomerID.value}"/>
                                <p:outputLabel value="General  ID:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.yourGeneralReference.value}"/>
                                <p:outputLabel value="System   ID:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.yourSystemReference.value}"/>
                                <p:outputLabel value="Status:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.statusDescription.value}"/>
                                <p:outputLabel value="Payment Method:" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentMethod.value}"/>
                                <p:outputLabel value="Payment Period" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentPeriod.value}"/>
                                <p:outputLabel value="Payment Day Of Month" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentPeriodDayOfMonth.value}"/>
                                <p:outputLabel value="Payment Day of Week" /> <h:outputText value="#{ezidebit.currentCustomerDetails.paymentPeriodDayOfWeek.value}"/>
                                <p:outputLabel value="Successful Payments" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsSuccessful}"/>
                                <p:outputLabel value="Amount Paid" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsSuccessfulAmount}"/>
                                <p:outputLabel value="Failed Payments" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsFailed}"/>
                                <p:outputLabel value="Failed Amount" /> <h:outputText value="#{ezidebit.currentCustomerDetails.totalPaymentsFailedAmount}"/>
                                <p:outputLabel value="Send Expired Card SMS" /> <h:outputText value="#{ezidebit.currentCustomerDetails.smsExpiredCard.value}"/>
                                <p:outputLabel value="Send Failed Payment SMS" /> <h:outputText value="#{ezidebit.currentCustomerDetails.smsFailedNotification.value}"/>
                                <p:outputLabel value="Send Payment Reminder SMS" /> <h:outputText value="#{ezidebit.currentCustomerDetails.smsPaymentReminder.value}"/>
                                
                            </p:panelGrid>
                        </p:panel>
                        <p:outputPanel id="iFrameHeaderPanel" >
                            <p:panelGrid id="dialoguePaymenstGrid1" columns="2" rendered="#{ezidebit.customerExistsInPaymentGateway == false and ezidebit.customerDetailsHaveBeenRetrieved == true}" >
                                <p:commandButton  id="paymentsButton" ajax="true"   actionListener="#{ezidebit.createCustomerRecord}" update=":growl :tv:paymentsForm :tv:iFrameForm "   value="#{configMapController.getKey('EditCustomersUpdatePayment')}" />
                                <p:outputLabel value="#{configMapController.getKey('EditCustomersAddToPaymentGatewayLabel')}" for="paymentsButton" />
                            </p:panelGrid>
                            <h:outputText id="selectedUser2" value="#{customersController.selected.firstname} #{customersController.selected.lastname}" />
                        </p:outputPanel>


                        <p:remoteCommand name="taskCompleted" actionListener="#{ezidebit.pollerListener}" />
                    </h:form>  
                    <h:form id="iFrameForm" > 

                      <!--  <p:panel id="iFramePanel" header="Edit The Payment Method for Customer #{customersController.selected.firstname} #{customersController.selected.lastname}" >-->
                            <p:outputPanel id="iFramePanel" >
                            <p:panelGrid id="dialoguePaymenstGrid2" columns="2" rendered="#{ezidebit.customerExistsInPaymentGateway == true and ezidebit.customerDetailsHaveBeenRetrieved == true}"  >
                                <p:panel id="viewPaymentsGrid" header="View Payment Method for Customer #{customersController.selected.firstname} #{customersController.selected.lastname}" >
                                    <iframe id="ezidebitIframeView"  style="width:400px;height:400px" src="#{ezidebit.getEziDebitWidgetUrl(false)}" />
                                </p:panel>
                                <p:panel id="editPaymentsGrid" header="Edit The Payment Method for Customer #{customersController.selected.firstname} #{customersController.selected.lastname}">
                                    <iframe id="ezidebitIframeEdit"  style="width:400px;height:400px" src="#{ezidebit.getEziDebitWidgetUrl(true)}" />
                                </p:panel>
                            </p:panelGrid>
                        </p:outputPanel>
                    </h:form>    
                </p:tab>























                <p:tab id="tab4" title="Customer Notes"  >  

                    <h:form id="formNotesCreate1">
                        <p:confirmDialog id="confirmDialogNotesCreate1" message="Add Customer Natoes"  
                                         header="#{configMapController.getKey('CreateNotesTitle')}" severity="info" widgetVar="NotesCreateDialogue"> 

                            <p:panelGrid columns="2">
                                <p:outputLabel value="#{configMapController.getKey('CreateNotesLabel_note')}" for="note" />
                                <p:inputTextarea rows="4" cols="30" id="note" value="#{notesController.selected.note}" title="#{configMapController.getKey('CreateNotesTitle_note')}" />
                                <p:commandButton oncomplete="PF('NotesCreateDialogue').hide();PF('notesControllerTable').filter()" actionListener="#{notesController.createDialogue}" value="#{configMapController.getKey('CreateNotesSaveLink')}" update=":growl :tv:NoteslistForm1 :tv:formNotesCreate1"/>                
                            </p:panelGrid>
                        </p:confirmDialog>
                    </h:form>
                    <h:form id="NoteslistForm1">
                        <h:panelGroup >
                            <p:commandButton id="showDialogButton2"  value="#{configMapController.getKey('ListNotesCreateLink')}" onclick="PF('NotesCreateDialogue').show()" type="button"/> 

                        </h:panelGroup> 
                        <h:outputText id="selectedUser3" value="#{customersController.selected.firstname} #{customersController.selected.lastname}" />
                        <h:outputText escape="false" value="#{configMapController.getKey('ListNotesEmpty')}" rendered="#{customersController.notesItems.rowCount == 0}"/>
                        <h:panelGroup rendered="#{customersController.notesItems.rowCount > 0}">
                            <p:dataTable  editable="true" value="#{customersController.notesItems}" filteredValue="#{customersController.notesFilteredItems}"  widgetVar="notesControllerTable" var="item"  paginator="true" rows="15"  paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"  rowsPerPageTemplate="5,10,15,20,25,50,100" >
                                <f:facet name="header">
                                    <p:outputPanel>
                                        <h:outputText value="Notes" />

                                    </p:outputPanel>
                                </f:facet>
                                <p:ajax event="rowEdit" listener="#{customersController.onNotesEdit}" update=":growl" oncomplete="PF('notesControllerTable').filter()" />  
                                <p:ajax event="rowEditCancel" listener="#{customersController.onNotesCancel}" update=":growl" />  

                                <p:column sortBy="#{item.createTimestamp}" filterOptions="" filterBy="#{item.createTimestamp}" headerText="#{configMapController.getKey('ListNotesTitle_createTimestamp')}"   >

                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.createTimestamp}">
                                                <f:convertDateTime pattern="MM/dd/yyyy HH:mm:ss" />
                                            </h:outputText>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:calendar value="#{item.createTimestamp}">	
                                                <p:ajax event="dateSelect" listener= "#{notesController.handleDateSelect}" update=":growl" />
                                            </p:calendar>
                                        </f:facet>
                                    </p:cellEditor> 

                                </p:column>

                                <p:column sortBy="#{item.note}" filterBy="#{item.note}"  filterMatchMode="contains" headerText="#{configMapController.getKey('ListNotesTitle_note')}"   >
                                    <p:cellEditor> 
                                        <f:facet name="output">
                                            <h:outputText value="#{item.note}"/>
                                        </f:facet>
                                        <f:facet name="input">
                                            <p:inputText value="#{item.note}" label="#{configMapController.getKey('ListNotesTitle_note')}" />
                                        </f:facet>
                                    </p:cellEditor> 


                                </p:column>
                                <!--         <p:column sortBy="#{item.deleted}" filterBy="#{item.deleted}" headerText="#{configMapController.getKey('ListNotesTitle_deleted')}"   >
                                       <p:cellEditor> 
                                           <f:facet name="output">
                                               <h:outputText value="#{item.deleted}"/>
                                           </f:facet>
                                           <f:facet name="input">
                                               <p:inputText value="#{item.deleted}" label="#{configMapController.getKey('ListNotesTitle_deleted')}" />
                                           </f:facet>
                                       </p:cellEditor> 
   
   
                                   </p:column>
                                   <p:column sortBy="#{item.userId}" filterBy="#{item.userId}" headerText="#{configMapController.getKey('ListNotesTitle_userId')}"   >
                                       <p:cellEditor> 
                                           <f:facet name="output">
                                               <h:outputText value="#{item.userId.firstname} #{item.userId.lastname}"/>
                                           </f:facet>
                                           <f:facet name="input">
                                               <p:inputText value="#{item.userId}" label="#{configMapController.getKey('ListNotesTitle_userId')}" />
                                           </f:facet>
                                       </p:cellEditor> 
   
   
                                   </p:column>-->
                                <p:column rendered="#{notesController.isUserInRole('ADMIN')}"  headerText="Edit" style="width:50px">  
                                    <p:rowEditor />  
                                </p:column>  

                                <p:column>
                                    <p:commandButton rendered="#{notesController.isUserInRole('ADMIN')}"  oncomplete="PF('notesControllerTable').filter()" update=":growl"  value="#{configMapController.getKey('ListNotesDestroyLink')}">
                                        <f:setPropertyActionListener value="#{item}" target="#{customersController.selectedNoteForDeletion}" />
                                    </p:commandButton>                        

                                </p:column>
                            </p:dataTable>
                        </h:panelGroup>
                    </h:form>

                </p:tab>
            </p:tabView>  

            <p:socket onMessage="handleMessage"  channel="/payments" transport="long-polling" autoConnect="false" widgetVar="subscriber"/>
                <!--<p:socket widgetVar="mySocket" channel="/#{session.id}"   
onMessage="myHandler" autoConnect="false"/> -->
            <script type="text/javascript">
                //   <![CDATA[
                $(document).ready(function() {
                    // this is needed to modify request parameters 
                    // as PrimeFaces does not transfer the attributes correctly 
                    // and does not expose all the parameters as tag attributes 
                    PF('subscriber').cfg.request.trackMessageLength = true;
                    //PF('subscriber').connect(); 
                });
                function handleMessage(facesmessage) {
                    facesmessage.severity = 'info';
                    taskCompleted();
                    PF('growlWidget').show([facesmessage]);
                    // this is needed for long-polling, bug in atmosphere...
                    if (PF('subscriber').connection.response.status === 200) {
                        PF('subscriber').connection.response.request.requestCount--;
                    }
                }
                // ]]>
            </script>
            <ui:include src="Create.xhtml"/>
            <ui:include src="CreateSchedule.xhtml"/>
            <ui:include src="CreatePayment.xhtml"/>
        </ui:define>
    </ui:composition>

</html>
