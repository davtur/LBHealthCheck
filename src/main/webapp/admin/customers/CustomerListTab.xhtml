
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition  xmlns="http://www.w3.org/1999/xhtml"
                 xmlns:ui="http://java.sun.com/jsf/facelets"
                 xmlns:h="http://java.sun.com/jsf/html"
                 xmlns:f="http://java.sun.com/jsf/core"
                 xmlns:p="http://primefaces.org/ui" >

    <h:form id="customerslistForm1" styleClass="updatePaymentInfo" >

        <div class="Container100 Responsive100">
            <div class="Container20 Responsive">

                <div class="Container100 TexAlLeft">
                    <div class="DispInlBlock MarTop20">
                        <div class="Container20"><i class="fa fa-user Fs50 red Fleft MarRight10"></i></div>
                        <div class="Container80">
                            <div class="Fright">
                                <h2 class="black Fs24 FontRalewayMedium"><h:outputText id="selectedUser" value="#{customersController.selected.firstname} #{customersController.selected.lastname}" /></h2>
                                <span class="Fs15 gray FontRalewayRegular DispBlock"><h:outputText value="Trainer, " rendered="#{customersController.isCustomerInRole(item,'TRAINER')}" /> <h:outputText value="#{customersController.selected.active.customerState}"/></span>
                            </div>
                        </div>

                    </div>

                </div>

            </div>

            <div class="Container20 Responsive">

                <div class="Container100 TexAlRight">

                    <h:panelGrid columns="2" cellpadding="5" class=" BorderedBox  TexAlRight PadWithBorder5">
                        <p:selectOneMenu id="active" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerStateControllerConverter"  value="#{customersController.selectedState}" label="#{configMapController.getKey('CreateCustomersTitle_active')}" >
                            <f:selectItems value="#{customerStateController.itemsAvailableAsObjects}"  var="custState" itemLabel="#{custState.customerState}" itemValue="#{custState}"/>                           
                        </p:selectOneMenu>
                        <p:commandButton id="changeStateButton"     actionListener="#{customersController.changeCustomersState}" value="#{configMapController.getKey('ListCustomersChangeStateButton')}"  update=":tv:customerslistForm1:customersTableList :growl" /> 

                    </h:panelGrid >

                </div>


            </div>
            <div class="Container40 Responsive">

                <div class="Container100 TexAlCenter" >

                    <div class=" BorderedBox  TexAlCenter " >
                        <!--<p:outputLabel value="#{configMapController.getKey('ListCustomersStatusButton')}" for="selectedStateCheckbox"/>-->
                        <p:selectManyCheckbox id="selectedStateCheckbox"  value="#{customersController.selectedCustomerStates}" label="Show Cancelled"  layout="lineDirection" valueChangeListener="#{customersController.selectShowCancelledBooleanChangeListener}"  >
                            <f:selectItems value="#{customersController.customerStateList}" var="cs" itemLabel="#{cs.customerState}" itemValue="#{cs}" />
                            <p:ajax event="change"   update=":tv:customerslistForm1"  /> 
                        </p:selectManyCheckbox>
                        <p:selectManyCheckbox id="selectedTypeCheckbox"  value="#{customersController.selectedCustomerTypes}" label="Show Cancelled"  layout="lineDirection" valueChangeListener="#{customersController.selectShowCancelledBooleanChangeListener}"  >
                            <f:selectItems value="#{customersController.customerTypesList}" var="ctype" itemLabel="#{ctype}" itemValue="#{ctype}" />
                            <p:ajax event="change"   update=":tv:customerslistForm1"  /> 
                        </p:selectManyCheckbox>

                       <!-- <p:selectBooleanCheckbox id="showNonUsers"   value="#{customersController.showNonUsers}" >  
                            <p:ajax update=":customerslistForm1"   />  
                        </p:selectBooleanCheckbox> 
                        <p:outputLabel  value="TRAINERS" for="showNonUsers"/>-->
                    </div>

                </div>


            </div>



            <div class="Container20 Responsive">

                <div class="Container100 TexAlRight">
                    <h:panelGrid columns="2" cellpadding="5" >
                        <p:commandButton id="addNoteDialogButton1"  value="#{configMapController.getKey('ListNotesCreateLink')}" onclick="PF('NotesCreateDialogue').show()" type="button"/> 
                        <p:commandButton id="showDialogButton"  oncomplete="PF('customersCreateDialogue').show()"   actionListener="#{customersController.prepareCreateAjax}" value="#{configMapController.getKey('ListCustomersCreateLink')}"  update=":formCustomersCreate1:dialogueGrid :formCustomersCreate1:dialogueGrid2 :growl" /> 
                    </h:panelGrid >

                </div>


            </div>
        </div>
        <div class="Seperator"></div>
        <div class="Container100">
            <h:outputText escape="false" value="#{configMapController.getKey('ListCustomersEmpty')}" rendered="#{customersController.items.rowCount == 0}"/>
            <h:panelGroup rendered="#{customersController.items.rowCount > 0}">
                <p:dataTable id="customersTableList" 


                             selection="#{customersController.multiSelected}" 
                             rowKey="#{item.id}" 
                             value="#{customersController.items}" 
                             filteredValue="#{customersController.filteredItems}" 
                             widgetVar="customersControllerTable" 
                             editable="true" 

                             var="item"  
                             scrollHeight="400"
                             scrollable="true" >
                    <f:facet name="header">


                        <h:panelGroup>
                            <h:outputText value="Search all fields:" />
                            <p:inputText id="globalFilter" onkeyup="PF('customersControllerTable').filter();" />
                        </h:panelGroup>
                        <h:outputText value="   " />
                        <h:panelGroup>
                         <!--   <h:outputText  rendered="#{ customersController.filteredItems != null}" value="#{customersController.filteredItems.size} Records Found"/>-->
                            <h:outputText  rendered="#{customersController.items != null}" value="#{customersController.items.rowCount} Records Found"/>


                        </h:panelGroup>

                    </f:facet>
                    <p:ajax event="rowSelect"  listener="#{customersController.setSelecteDblClick}" update=":growl :tv:customerslistForm1:selectedUser :tv:formCustomersEdit1 :formCustomersCreate1 :tv:paymentsForm :tv:NoteslistForm1 :confirmCancellation :confirmDialogNotesCreate1"  />  
                    <p:column selectionMode="multiple" />
                    <p:column sortBy="#{item.id}" filterBy="#{item.id}" headerText="#{configMapController.getKey('ListCustomersTitle_id')}"   >
                        <h:outputText value="#{item.id}"/>
                    </p:column>

                    <p:column sortBy="#{item.firstname}" filterBy="#{item.firstname}" headerText="#{configMapController.getKey('ListCustomersTitle_firstname')}"   >
                        <h:outputText value="#{item.firstname}"/>
                    </p:column>
                    <p:column sortBy="#{item.lastname}" filterBy="#{item.lastname}" headerText="#{configMapController.getKey('ListCustomersTitle_lastname')}"   >
                        <h:outputText value="#{item.lastname}"/>
                    </p:column>
                    <p:column sortBy="#{item.active.customerState}" filterBy="#{item.active.customerState}" headerText="#{configMapController.getKey('ListCustomersTitle_activeCRM')}" filterMatchMode="contains"  >
                        <!-- <h:outputText value="LEAD, " rendered="#{customersController.isCustomerInRole(item,'LEAD')}" />  
                        <h:outputText value="TRAINER, " rendered="#{customersController.isCustomerInRole(item,'TRAINER')}" /> -->
                        <ui:repeat value="#{item.groupsCollection}" var="group">
                            <h:outputText value="#{group.groupname} "/>  
                        </ui:repeat>
                        <h:outputText value="#{item.active.customerState}"/>  
                        <h:outputText value=", PG=#{item.paymentParametersId.statusDescription}"/> 
                    </p:column>
                   <!-- <p:column sortBy="#{item.paymentParametersId.statusDescription}" filterBy="#{item.paymentParametersId.statusDescription}" headerText="#{configMapController.getKey('ListCustomersTitle_activeEZI')}"   >
                        <h:outputText value="#{item.paymentParametersId.statusDescription}"/> 
                    </p:column>-->
                    <p:column sortBy="#{item.groupPricing.planName}" filterBy="#{item.groupPricing.planName}" headerText="#{configMapController.getKey('CreateCustomersTitle_groupPricing')}"   >
                        <h:outputText value="#{item.groupPricing.planName} - #{item.groupPricing.planPrice}"/> 
                    </p:column>

                    <p:column sortBy="#{item.paymentParametersId.contractStartDate}" filterBy="#{item.paymentParametersId.contractStartDate}" headerText="#{configMapController.getKey('ListCustomersTitle_contractStartDate')}"   >
                        <h:outputText value="#{item.paymentParametersId.contractStartDate}">
                            <f:convertDateTime pattern="dd MMM yyyy" />
                        </h:outputText>
                    </p:column>
                    <p:column sortBy="#{item.paymentParametersId.paymentPeriod}" filterBy="#{item.paymentParametersId.paymentPeriod}" headerText="#{configMapController.getKey('ListCustomersTitle_paymentPeriod')}"   >

                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'F'}"  value="Fortnightly" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'M'}"  value="Monthly" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == '4'}"  value="4 Weekly" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'N'}"  value="Weekday in Month" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'Q'}"  value="Quarterly" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'H'}"  value="Half Yearly" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'Y'}"  value="Annually" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'W'}"  value="Weekly" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod == 'Z'}"  value="No Schedule" />
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod != 'Z' and item.paymentParametersId.paymentPeriod != 'M' and item.paymentParametersId.paymentPeriod != 'Q' and item.paymentParametersId.paymentPeriod != 'H' and item.paymentParametersId.paymentPeriod != 'Y' }"  value=" - #{item.paymentParametersId.paymentPeriodDayOfWeek}"/> 
                        <h:outputText  rendered="#{item.paymentParametersId.paymentPeriod != 'Z' and item.paymentParametersId.paymentPeriod == 'M' }"  value=", day-#{item.paymentParametersId.paymentPeriodDayOfMonth}"/> 

                    </p:column>

                    <p:column sortBy="#{item.paymentParametersId.nextScheduledPayment.debitDate}" filterBy="#{item.paymentParametersId.nextScheduledPayment.debitDate}" headerText="#{configMapController.getKey('ListCustomersTitle_nextScheduledPayment')}"   >
                        <h:outputText rendered="#{not empty item.paymentParametersId.nextScheduledPayment}"  value="#{item.paymentParametersId.nextScheduledPayment.debitDate}">
                            <f:convertDateTime pattern="E dd MMM yyyy" />
                        </h:outputText>
                        <h:outputText rendered="#{empty item.paymentParametersId.nextScheduledPayment}" styleClass="red FontBold animated pulse infinite" value="#{configMapController.getKey('paymentsNextScheduledIsNull')}"/>
                    </p:column>
                    <p:column sortBy="#{item.paymentParametersId.nextScheduledPayment.paymentAmount}" filterBy="#{item.paymentParametersId.nextScheduledPayment.paymentAmount}" headerText="#{configMapController.getKey('ListCustomersTitle_nextScheduledPaymentAmount')}"   >
                        <h:outputText rendered="#{not empty item.paymentParametersId.nextScheduledPayment}" value="#{item.paymentParametersId.nextScheduledPayment.paymentAmount}">
                            <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                        </h:outputText>
                        <h:outputText rendered="#{empty item.paymentParametersId.nextScheduledPayment}"  value="---"/>
                    </p:column>
                    <p:column sortBy="#{item.paymentParametersId.lastSuccessfulScheduledPayment.lastUpdatedDatetime}" filterBy="#{item.paymentParametersId.lastSuccessfulScheduledPayment.lastUpdatedDatetime}" headerText="#{configMapController.getKey('ListCustomersTitle_lastUpdated')}"   >
                        <h:outputText  rendered="#{not empty item.paymentParametersId.lastSuccessfulScheduledPayment}"  value="#{item.paymentParametersId.lastSuccessfulScheduledPayment.lastUpdatedDatetime}">
                            <f:convertDateTime  pattern="yyyy-MM-dd hh:mm:ss" />
                        </h:outputText>
                        <h:outputText rendered="#{empty item.paymentParametersId.lastSuccessfulScheduledPayment}" value="---"/>
                    </p:column>

                    <p:column sortBy="#{item.paymentParametersId.lastSuccessfulScheduledPayment.paymentAmount}" filterBy="#{item.paymentParametersId.lastSuccessfulScheduledPayment.paymentAmount}" headerText="#{configMapController.getKey('ListCustomersTitle_totalPaymentsSuccessfulAmount')}"   >
                        <h:outputText rendered="#{not empty item.paymentParametersId.lastSuccessfulScheduledPayment}" value="#{item.paymentParametersId.lastSuccessfulScheduledPayment.paymentAmount}">
                            <f:convertNumber type="currency" currencySymbol="$" locale="au-AU" />
                        </h:outputText>
                    </p:column>
                    <p:column  sortBy="#{item.paymentParametersId.lastSuccessfulScheduledPayment.debitDate}" filterBy="#{item.paymentParametersId.lastSuccessfulScheduledPayment.debitDate}" headerText="#{configMapController.getKey('ListCustomersTitle_lastSuccessfulScheduledPayment')}"   >
                        <h:outputText rendered="#{not empty item.paymentParametersId.lastSuccessfulScheduledPayment}" value="#{item.paymentParametersId.lastSuccessfulScheduledPayment.debitDate}">
                            <f:convertDateTime pattern="E dd MMM yyyy" />
                        </h:outputText>
                        <h:outputText rendered="#{empty item.paymentParametersId.lastSuccessfulScheduledPayment}" value="---"/>
                    </p:column>


                </p:dataTable>
            </h:panelGroup>
        </div>
    </h:form>

</ui:composition>
