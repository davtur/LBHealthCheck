
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition  xmlns="http://www.w3.org/1999/xhtml"
                 xmlns:ui="http://java.sun.com/jsf/facelets"
                 xmlns:h="http://java.sun.com/jsf/html"
                 xmlns:f="http://java.sun.com/jsf/core"
                 xmlns:p="http://primefaces.org/ui" >

    <h:form id="formCustomersEdit1" >    
        <!-- <p:log />-->
        <p:panelGrid id="dialogueGrid1" columns="4">
            <p:outputLabel value="#{configMapController.getKey('EditCustomersLabel_firstname')}" for="firstname1" />
            <p:inputText id="firstname1"  value="#{customersController.selected.firstname}" title="#{configMapController.getKey('EditCustomersTitle_firstname')}" valueChangeListener="#{customersController.firstNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_firstname')}">
                <p:ajax update=":tv:formCustomersEdit1:username1" event="keyup"/>
            </p:inputText>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_gender')}" title="#{configMapController.getKey('EditCustomersTitle_gender')}" for="gender1" />
            <p:selectOneMenu id="gender1" value="#{customersController.selected.gender}"   required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_gender')}">
                <f:selectItem itemValue="M" itemLabel="Male" />
                <f:selectItem itemValue="F" itemLabel="Female" />
            </p:selectOneMenu>
            <p:outputLabel value="#{configMapController.getKey('EditCustomersLabel_lastname')}" for="lastname1" />
            <p:inputText id="lastname1" value="#{customersController.selected.lastname}" title="#{configMapController.getKey('EditCustomersTitle_lastname')}" valueChangeListener="#{customersController.lastNameListener}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_lastname')}">
                <p:ajax update=":tv:formCustomersEdit1:username1" event="keyup" />
            </p:inputText>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_dob')}" for="dob1" />
            <p:calendar id="dob1" pattern="dd/MM/yyyy" value="#{customersController.selected.dob}" title="#{configMapController.getKey('CreateCustomersTitle_dob')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_dob')}">
            </p:calendar>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailAddress')}" for="emailAddress1" />
            <p:inputText id="emailAddress1" value="#{customersController.selected.emailAddress}" title="#{configMapController.getKey('EditCustomersTitle_emailAddress')}" required="true" requiredMessage="#{configMapController.getKey('EditCustomersRequiredMessage_emailAddress')}">
                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.EmailValidator" />
            </p:inputText>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_username')}" for="username1" />
            <p:inputText id="username1" value="#{customersController.selected.username}" title="#{configMapController.getKey('CreateCustomersTitle_username')}" required="true" requiredMessage="#{configMapController.getKey('CreateCustomersRequiredMessage_username')}"/>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_streetAddress')}" for="streetAddress1" />
            <p:inputText id="streetAddress1" value="#{customersController.selected.streetAddress}" title="#{configMapController.getKey('CreateCustomersTitle_streetAddress')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_suburb')}" for="suburb1" />
            <p:inputText id="suburb1" value="#{customersController.selected.suburb}" title="#{configMapController.getKey('CreateCustomersTitle_suburb')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_postcode')}" for="postcode1" />
            <p:inputText id="postcode1" value="#{customersController.selected.postcode}" title="#{configMapController.getKey('CreateCustomersTitle_postcode')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_city')}" for="city1" />
            <p:inputText id="city1" value="#{customersController.selected.city}" title="#{configMapController.getKey('CreateCustomersTitle_city')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_addrState')}" for="addrState1" />
            <p:inputText id="addrState1" value="#{customersController.selected.addrState}" title="#{configMapController.getKey('CreateCustomersTitle_addrState')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_countryId')}" for="countryId1" />
            <p:inputText id="countryId1" value="#{customersController.selected.countryId}" title="#{configMapController.getKey('CreateCustomersTitle_countryId')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_telephone')}" for="telephone1" />
            <p:inputText id="telephone1" value="#{customersController.selected.telephone}" title="#{configMapController.getKey('CreateCustomersTitle_telephone')}" required="true" >
                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.PhoneNumberValidator" />
            </p:inputText>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emergencyContactName')}" for="emergencyContactName" />
            <p:inputText id="emergencyContactName" value="#{customersController.selected.emergencyContactName}" title="#{configMapController.getKey('CreateCustomersTitle_emergencyContactName')}" />
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emergencyContactPhone')}" for="emergencyContactPhone" />
            <p:inputText id="emergencyContactPhone" value="#{customersController.selected.emergencyContactPhone}" title="#{configMapController.getKey('CreateCustomersTitle_emergencyContactPhone')}" >

            </p:inputText>

            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_fax')}" for="fax1" />
            <p:inputText id="fax1" value="#{customersController.selected.fax}" title="#{configMapController.getKey('CreateCustomersTitle_fax')}" />


            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_newsletter')}" title="#{configMapController.getKey('EditCustomersTitle_newsletter')}" for="newsletter1" />
            <p:selectOneMenu id="newsletter1" value="#{customersController.selected.newsletter}"  >
                <f:selectItem itemValue="Y" itemLabel="Send Newsletter" />
                <f:selectItem itemValue="N" itemLabel="Dont Send" />
            </p:selectOneMenu>

            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_referredby')}"  title="#{configMapController.getKey('EditCustomersTitle_referredby')}"  for="referredby1" />
            <p:selectOneMenu id="referredby1" value="#{customersController.selected.referredby}"  filter="true"  filterMatchMode="contains">
                <f:selectItems value="#{customersController.itemsAvailableSelectOne}"  />
            </p:selectOneMenu>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_groupPricing')}" for="groupPricing1" />
            <p:selectOneMenu id="groupPricing1" valueChangeListener="#{customersController.selectOneChangePlanListener}" converter="planControllerConverter" value="#{customersController.selected.groupPricing}" label="#{configMapController.getKey('CreateCustomersTitle_groupPricing')}" >
                <f:selectItems value="#{planController.itemsAvailableForDisplayAsObjects}"  var="plan" itemLabel="#{plan.planName} - $#{plan.planPrice} "  itemValue="#{plan}"/>
                <p:ajax update="planDescription"/>
            </p:selectOneMenu>

            <p:outputLabel value="#{configMapController.getKey('ViewPlanLabel_planDescription')}" for="planDescription"/>
            <h:outputText id="planDescription" value="#{customersController.selected.groupPricing.planDescription}" title="#{configMapController.getKey('ViewPlanTitle_planDescription')}"/>

            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_emailFormat')}" for="emailFormat1" />
            <p:selectOneMenu id="emailFormat1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="emailFormatControllerConverter" value="#{customersController.selected.emailFormat}" label="#{configMapController.getKey('CreateCustomersTitle_emailFormat')}" >
                <f:selectItems value="#{emailFormatController.itemsAvailableAsObjects}"  var="emailFormat" itemLabel="#{emailFormat.emailFormat}" itemValue="#{emailFormat}"/>
            </p:selectOneMenu>
            <p:outputLabel rendered="#{false}" value="#{configMapController.getKey('CreateCustomersLabel_auth')}" for="auth1" />
            <p:selectOneMenu rendered="#{false}" id="auth1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="customerAuthControllerConverter" value="#{customersController.selected.auth}" label="#{configMapController.getKey('CreateCustomersTitle_auth')}" >
                <f:selectItems value="#{customerAuthController.itemsAvailableAsObjects}"  var="custAuth" itemLabel="#{custAuth.customerAuthType}" itemValue="#{custAuth}"/>
            </p:selectOneMenu>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_demographic')}" for="demographic1" />
            <p:selectOneMenu id="demographic1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="demographicTypesControllerConverter" value="#{customersController.selected.demographic}" label="#{configMapController.getKey('CreateCustomersTitle_demographic')}" >
                <f:selectItems value="#{demographicTypesController.itemsAvailableAsObjects}"  var="demo" itemLabel="#{demo.name}" itemValue="#{demo}"/>
            </p:selectOneMenu>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_preferredContact')}" for="preferredContact1" />
            <p:selectOneMenu id="preferredContact1" valueChangeListener="#{customersController.selectOneMenuValueChangeListener}" converter="preferedContactControllerConverter" value="#{customersController.selected.preferredContact}" label="#{configMapController.getKey('CreateCustomersTitle_preferredContact')}" >
                <f:selectItems value="#{preferedContactController.itemsAvailableAsObjects}"  var="prefContact" itemLabel="#{prefContact.preferedContactMethod}" itemValue="#{prefContact}"/>
            </p:selectOneMenu>
            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_smsOptions')}"  />
            <h:panelGrid columns="2" rendered="#{not empty customersController.selected.paymentParametersId}" >
                <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_SmsExpiredCard')}" for="checkbox1" />
                <p:selectBooleanCheckbox id="checkbox1" value="#{customersController.paymentParametersSmsExpiredCard}"  label="Sms Expired Card" />
                <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_SmsPaymentReminder')}" for="checkbox2" />
                <p:selectBooleanCheckbox id="checkbox2" value="#{customersController.paymentParametersSmsPaymentReminder}"  label="Sms Payment Reminder" />
                <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_SmsFailedNotification')}" for="checkbox3" />
                <p:selectBooleanCheckbox id="checkbox3" value="#{customersController.paymentParametersSmsFailedNotification}"  label="Sms Failed Notification" />
            </h:panelGrid>

            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_password')}" for="passButton" />
           <!--  <p:password id="password1"  value="#{customersController.checkPass}" onfocus="this.select()" feedback="true" redisplay="true" title="#{configMapController.getKey('EditCustomersTitle_password')}">
                <p:ajax listener="#{customersController.checkPassChange}" event="keyup" />
            </p:password>
            <h:panelGrid  >
                <p:messages id="messages" showDetail="true" autoUpdate="true"  />

                <h:panelGrid columns="2" id="matchGrid" cellpadding="5">                   
                    <h:outputLabel for="pwd1" value="Password 1: *" />
                    <p:password id="pwd1" value="#{customersController.checkPass}" match="pwd2" label="Password 1" feedback="true" required="true" />

                    <h:outputLabel for="pwd2" value="Password 2: *" />
                    <p:password id="pwd2" value="#{customersController.checkPass}" label="Password 2" required="true" />
                </h:panelGrid>
                <p:commandButton  id="passButton" ajax="true" actionListener="#{customersController.updatepass}" update=":growl matchGrid"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>

               <p:commandButton update="matchGrid" value="Save" />
            </h:panelGrid>  -->
          <!--  <p:commandButton  id="passButton" ajax="true" actionListener="#{customersController.updatepass}" update=":growl"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>-->
            <p:commandButton  id="passButton" ajax="true"  onclick="PF('updatePasswordDialogueWidget').show();" update=":growl :updatePass"   value="#{configMapController.getKey('EditCustomersUpdatePassword')}" immediate="true"/>

            <p:outputLabel value="#{configMapController.getKey('CreateCustomersLabel_groups')}" for="scroll2" />

            <p:dataGrid  id="scroll2" columns="3"   value="#{customersController.customerGroupsList}" var="group" rowIndexVar="rowIndex"  >
                <h:panelGrid id="customerPanel2" columns="2" style="margin-bottom:10px" cellpadding="5" >
                    <h:outputText value="#{group.groupname}" />
                    <p:selectBooleanCheckbox id="btnAttendedSession2" value="#{customersController.checkedGroups[rowIndex]}"  >
                        <p:ajax   event="change" listener="#{customersController.groupChangedChangeListener}"/>
                    </p:selectBooleanCheckbox>
                </h:panelGrid>
            </p:dataGrid>

        </p:panelGrid>



        <!-- <p:outputLabel  value="Groups:    " for="selectedGroupsCheckbox2"/>
         <h:selectManyCheckbox id="selectedGroupsCheckbox2" value="#{customersController.selectedGroups}"    converter="customerGroupsConverter">
             <f:selectItems value="#{customersController.customerGroupsList}" var="custGroup" itemLabel="#{custGroup.groupname}" itemValue="#{custGroup}" />

         </h:selectManyCheckbox>-->



        <p:panel>
            <p:commandButton id="dialogueSave1"  actionListener="#{customersController.editDialogue}" value="#{configMapController.getKey('CreateCustomersSaveLink')}" update=":tv:customerslistForm1:customersTableList :growl"/>                
           <!-- <p:commandButton  value="#{configMapController.getKey('sendCustomerOnBoardEmailButton')}"  actionListener="#{customersController.sendCustomerOnboardEmail}" update="@(.updateNotesDataTable) :growl"/>-->
            <p:commandButton  value="#{configMapController.getKey('sendCustomerOnBoardEmailButton')}" onclick="PF('SendEmailToCustomerDialog').show()"  update=" :growl"/>
        </p:panel>

        <p:dataTable  
            id="questionnaireMapDatatable"  
            editable="true" 
            value="#{customersController.selected.questionnaireMapCollection}" 

            rowKey="#{item.id}" 

            widgetVar="questionnaireMapDatatableWidget" 
            var="item"  
            scrollHeight="200"
            scrollable="true" 

            >

            <p:ajax event="rowEdit" listener="#{surveysController.onEditQMap}" update=":growl"  />  
            <p:ajax event="rowEditCancel" listener="#{surveysController.onCancelQMap}" update=":growl"   />  

            <!--<p:column selectionMode="single"/>-->

            <p:column sortBy="#{item.surveysId.name}"  headerText="#{configMapController.getKey('EditCustomerSurvey_Name')}"   >
                <p:cellEditor> 
                    <f:facet name="output">
                        <h:outputText value="#{item.surveysId.name}"  />
                    </f:facet>
                    <f:facet name="input">
                        <h:outputText value="#{item.surveysId.name}"  />
                    </f:facet>
                </p:cellEditor> 


            </p:column>
            <p:column sortBy="#{item.enabled}"  headerText="#{configMapController.getKey('EditCustomerSurvey_Enabled')}"   >
                <p:cellEditor> 
                    <f:facet name="output">
                        <p:selectBooleanCheckbox value="#{item.enabled}" disabled="true"/>
                    </f:facet>
                    <f:facet name="input">
                        <p:selectBooleanCheckbox value="#{item.enabled}" itemLabel="#{configMapController.getKey('EditCustomerSurvey_Enabled')}" />
                    </f:facet>
                </p:cellEditor> 
            </p:column>
            <p:column sortBy="#{item.questionnaireCompleted}"  headerText="#{configMapController.getKey('EditCustomerSurvey_Completed')}"   >
                <p:cellEditor> 
                    <f:facet name="output">
                        <p:selectBooleanCheckbox value="#{item.questionnaireCompleted}" disabled="true"/>
                    </f:facet>
                    <f:facet name="input">
                        <p:selectBooleanCheckbox value="#{item.questionnaireCompleted}" itemLabel="#{configMapController.getKey('EditCustomerSurvey_Completed')}" />
                    </f:facet>
                </p:cellEditor> 


            </p:column>
            <p:column rendered="#{toDoListController.isUserInRole('ADMIN')}"  headerText="Edit" style="width:50px">  
                <p:rowEditor />  
            </p:column>  



        </p:dataTable>
        <p:fieldset  legend="Pay Rates to Session Types Editor" rendered="#{customersController.isUserInRole('ADMIN') and not empty suppliersController.selected}" >
             <p:selectOneMenu id="supplierId" valueChangeListener="#{suppliersController.contractorRatesChangeListener}" converter="contractorRatesControllerConverter"  value="#{suppliersController.selectedContractorRate}"  label="#{configMapController.getKey('CreateContractorRatesTitle_supplierId')}" required="true" requiredMessage="#{configMapController.getKey('CreateContractorRatesRequiredMessage_supplierId')}">
                <!-- <f:selectItems value="#{suppliersController.contractRatesByCurrentSupplier}" var="contractorRates" itemLabel="#{contractorRates.name}" itemValue="#{contractorRates}"/>-->
                 <f:selectItems value="#{contractorRatesController.itemsAvailable}" var="contractorRates" itemLabel="#{contractorRates.name}" itemValue="#{contractorRates}"/>
                        <p:ajax   update=":growl :formCustomersEdit1:contractorRatePicklist"  />
                    </p:selectOneMenu>
             
             
            <p:pickList id="contractorRatePicklist" value="#{suppliersController.rateItems}" var="rateItems" converter="sessionTypesControllerConverter" itemLabel="#{rateItems.name}" itemValue="#{rateItems}" >
                    <f:facet name="sourceCaption">Available Session Types</f:facet>
                    <f:facet name="targetCaption">#{suppliersController.selectedContractorRate.name}</f:facet>
                   
                    <p:ajax event="transfer" listener="#{suppliersController.onTransfer}" update=":growl :formCustomersEdit1:contractorRatePicklist" />
                   
               
                </p:pickList>
         
        </p:fieldset>


    </h:form>

   <!--    <h:form id="carForm" rendered="#{not empty suppliersController.selected}">
        <p:fieldset id="availableCarsField" legend="Available Session Types">
            <p:dataGrid id="availableCars" var="sessionType" value="#{suppliersController.sessionTypesArray}" columns="3">
                <p:panel id="pnl" header="#{sessionType.name}" style="text-align:center">
                    <h:outputText value="#{sessionType.description}" title="#{configMapController.getKey('ViewSessionTypesTitle_description')}"/>
                </p:panel>
                <p:draggable for="pnl" revert="true" handle=".ui-panel-titlebar" stack=".ui-panel"/>
            </p:dataGrid>
        </p:fieldset>

        <p:outputPanel id="dropArea">
            <ui:repeat value="#{suppliersController.selected.contractorRatesCollection}" id="dropTarget" var="contractorRate">
                <p:fieldset  legend="#{contractorRate.name}" style="margin-top:20px">
                    <h:outputText value="!!!Drop here!!!"  style="font-size:24px;" />

                <p:dataTable  var="sessionType" value="#{contractorRate.contractorRateToTaskMapCollection}" rendered="#{not empty contractorRate.contractorRateToTaskMapCollection}">
                        <p:column headerText="Id">
                            <h:outputText value="#{sessionType.id}" />
                        </p:column>

                        <p:column headerText="Year">
                            <h:outputText value="#{sessionType.name}" />
                        </p:column>

                        <p:column headerText="Brand">
                            <h:outputText value="#{sessionType.description}" />
                        </p:column>

                    </p:dataTable>

                    <p:dataGrid id="selectedRates_#{sessionType.id}" var="sessionType" value="#{contractorRate.contractorRateToTaskMapCollection}" columns="3" >
                        <p:panel  header="#{sessionType.name}" style="text-align:center">
                            <h:outputText value="#{sessionType.description}" title="#{configMapController.getKey('ViewSessionTypesTitle_description')}"/>
                        </p:panel>

                    </p:dataGrid>

                </p:fieldset>


            </ui:repeat>
            <p:droppable  for="dropTarget" tolerance="touch" activeStyleClass="ui-state-highlight" datasource="availableCars" >
                <p:ajax listener="#{suppliersController.onSessionTypeDrop}" update=":carForm:dropArea :carForm:availableCars " >

                </p:ajax>
            </p:droppable>
        </p:outputPanel>
    </h:form>-->

</ui:composition>
