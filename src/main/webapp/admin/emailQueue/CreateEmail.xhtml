
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="/WEB-INF/template.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui" >

    
        <ui:define name="title">
            <h:outputText value="#{configMapController.getKey('CreateEmailTitle')}"></h:outputText>
        </ui:define>
        <ui:define name="body">

            <h:form id="sendEmailForm">
                <p:panel>
                    <h:panelGrid columns="3">

                        <p:commandButton   ajax="false"   action="#{emailQueueController.create}" value="#{configMapController.getKey('CreateEmailSaveLink')}" />

                        <p:commandButton   ajax="false"   action="#{emailQueueController.prepareList}" value="#{configMapController.getKey('CreateEmailShowAllLink')}" immediate="true"/>



                    </h:panelGrid>
                </p:panel>
                <p:panel  header="#{configMapController.getKey('CreateEmailLabel_picker')}" >
                    <p:pickList id="picker"  value="#{emailQueueController.participants}"
                                var="cust"

                                itemLabel="#{cust.firstname} #{cust.lastname}"
                                itemValue="#{cust}" converter="customersControllerConverter">
                        <f:facet name="sourceCaption">Customers</f:facet>
                        <f:facet name="targetCaption">Email Recipients List</f:facet>
                    </p:pickList>

                    <p:dialog  modal="true" showEffect="fade" hideEffect="fade" widgetVar="cityDialog">
                        <h:panelGrid  id="displayCities" columns="2">
                            <h:outputText value="Source: " style="font-weight:bold"/>
                            <ui:repeat value="#{emailQueueController.participants.source}" var="item">
                                <h:outputText value="#{item}" style="margin-right:5px" />
                            </ui:repeat>

                            <h:outputText value="Target: " style="font-weight:bold"/>
                            <ui:repeat  value="#{emailQueueController.participants.target}" var="item">
                                <h:outputText value="#{item}" style="margin-right:5px" />
                            </ui:repeat>
                        </h:panelGrid>
                    </p:dialog>
                </p:panel>


                <p:panel>
                    <h:panelGrid columns="2">
                        <h:panelGrid columns="1">
                            <h:outputLabel value="#{configMapController.getKey('CreateEmailLabel_fromaddress')}" for="EmailFromAddress" />
                            <h:inputText styleClass="emailEditorInput" onfocus="this.select()" id="EmailFromAddress" value="#{emailQueueController.selected.fromaddress}" title="#{configMapController.getKey('CreateEmailTitle_EmailFromAddress')}" required="true" requiredMessage="#{configMapController.getKey('CreateEmailRequiredMessage_EmailFromAddress')}">
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.EmailValidator" />
                            </h:inputText>
                            <h:outputLabel value="#{configMapController.getKey('CreateEmailLabel_ccaddress')}" for="EmailCCAddress" />
                            <h:inputText styleClass="emailEditorInput" onfocus="this.select()" id="EmailCCAddress" value="#{emailQueueController.selected.ccaddresses}" title="#{configMapController.getKey('CreateEmailTitle_EmailCCAddress')}" >
                                <f:validator validatorId="au.com.manlyit.fitnesscrm.stats.classes.util.EmailValidator"  />
                            </h:inputText>
                            <h:outputLabel value="#{configMapController.getKey('CreateEmailLabel_subject')}" for="emailSubject" />
                            <h:inputText styleClass="emailEditorInput" onfocus="this.select()" id="emailSubject" value="#{emailQueueController.selected.subject}" title="#{configMapController.getKey('CreateEmailTitle_subject')}" required="true" requiredMessage="#{configMapController.getKey('CreateEmailRequiredMessage_subject')}">
                            </h:inputText>
                            <p:panel>
                                <h:outputLabel value="#{configMapController.getKey('CreateEmailLabel_senddate')}" for="sd" />
                                <p:calendar id="sd"  value="#{emailQueueController.selected.sendDate}"  pattern="dd/MM/yyyy HH:mm"  title="#{configMapController.getKey('CreateEmailTitle_senddate')}"  >
                                    <p:ajax event="dateSelect"  listener="#{emailQueueController.handleDateSelect}" update=":growl " />
                                </p:calendar>   
                            </p:panel>

                        </h:panelGrid>

                    </h:panelGrid>



                    <p:panel >
                        <h:outputLabel value="#{configMapController.getKey('CreateEmailLabel_editorbox')}" for="editor1" />
                        <p:editor id="editor1" value="#{emailQueueController.selected.message}" widgetVar="editor" />  

                        <h:panelGrid columns="2" style="margin-top:10px">  
                            <p:commandButton value="View" update="display" oncomplete="PF('dlg').show()"  
                                             icon="ui-icon ui-icon-disk" />  
                            <p:commandButton type="button" value="Clear" onclick="PF('editor').clear()"  
                                             icon="ui-icon ui-icon-close" />  
                        </h:panelGrid>  

                        <p:dialog header="Content" widgetVar="dlg" showEffect="fade" hideEffect="fade" modal="true">          
                            <h:outputText id="display" value="#{emailQueueController.selected.message}" escape="false" />  
                        </p:dialog>  
                    </p:panel>





                </p:panel>
            </h:form>
        </ui:define>
    </ui:composition>


